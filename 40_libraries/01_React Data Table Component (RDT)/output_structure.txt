└── ./
    └── 09_selected_row_styling/
        └── 02_select_rows_highlight_selected/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 01_select_rows_checkboxes/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
    └── 08_hover_effect/
        └── 02_hover_effect_custom/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 01_hover_effect_property/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
    └── 07_pagination/
        └── 03_client_side_pagination_minimalfooter/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 04_server_side_pagination/
            └── server/
                └── server.js
                └── package.json
            └── client/
                └── index.html
                └── .eslintrc.cjs
                └── vite.config.js
                └── package.json
                └── src/
                    └── main.jsx
                    └── App.jsx
        └── 01_client_side_pagination/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 02_client_side_pagination_customlabels/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
    └── 03_row_striping/
        └── index.html
        └── .eslintrc.cjs
        └── vite.config.js
        └── package.json
        └── src/
            └── main.jsx
            └── App.jsx
    └── 12_responsive_table/
        └── 04_details_button/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 02_few_columns/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 05_multi_level_header/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 03_few_columns_expandable_rows/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 01_fixed_size_table_scrollable/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
    └── 10_sortable_columns/
        └── 01_sortable_column_indicator/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 02_sortable_columns_custom_functions/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
    └── 02_borders/
        └── 04_full_grid_borders_custom_styles/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 01_horizontal_separators_only/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 03_full_grid_borders/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 02_vertical_column_separators/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
    └── 13_global_search/
        └── 02_search_all_columns_and_filter_debounce_trick/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 04_server_side_search/
            └── server/
                └── server.js
                └── package.json
            └── client/
                └── index.html
                └── .eslintrc.cjs
                └── vite.config.js
                └── package.json
                └── src/
                    └── main.jsx
                    └── App.jsx
        └── 03_search_all_columns_and_filter_highlight_matches copy/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 03_search_all_columns_and_filter_highlight_matches/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 01_search_all_columns_and_filter/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
    └── 06_text_wrapping_truncation/
        └── 04_wrap_threeline/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 03_wrap_twoline/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 02_wrap_oneline/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 01_wrap_property/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
    └── 01_simple/
        └── index.html
        └── .eslintrc.cjs
        └── vite.config.js
        └── README.md
        └── package.json
        └── src/
            └── main.jsx
            └── App.jsx
    └── 04_fixed_column_width/
        └── index.html
        └── .eslintrc.cjs
        └── vite.config.js
        └── package.json
        └── src/
            └── main.jsx
            └── App.jsx
    └── 11_column_visibility/
        └── 01_toggle_column_visibility/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 02_preset_column_visibility/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
    └── 14_filters/
        └── 01_per_column_filters/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 02_per_column_filters_and_dropdown/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
    └── 15_no_pagination_displaying_rows/
        └── 03_load_more_infinite_scroll/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 01_fading_rows/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 02_load_more_button/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
    └── 16_cell_editing/
        └── 03_edit_button_inline_edit/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 04_edit_button_modal/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 02_two_cell_inline_edit/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 01_one_cell_inline_edit/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
    └── 05_fixed_row_height/
        └── 01_one_line_ellipsis/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 04_two_line_clamp_fixed/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx
        └── 02_two_line_clamp/
            └── src/
                └── main.jsx
                └── App.jsx
        └── 03_one_line_ellipsis_fixed/
            └── index.html
            └── .eslintrc.cjs
            └── vite.config.js
            └── package.json
            └── src/
                └── main.jsx
                └── App.jsx

Contents of 09_selected_row_styling/02_select_rows_highlight_selected/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 09_selected_row_styling/02_select_rows_highlight_selected/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 09_selected_row_styling/02_select_rows_highlight_selected/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 09_selected_row_styling/02_select_rows_highlight_selected/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 09_selected_row_styling/02_select_rows_highlight_selected/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 09_selected_row_styling/02_select_rows_highlight_selected/src/App.jsx:

// App.jsx — Selected Row Styling v5 (click-to-select; no checkboxes)
// Disable checkboxes; click a row to select it and style via conditionalRowStyles.

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
  { name: "Role", selector: r => r.role },
];

const data = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer (Android)" },
  { id: 4, name: "Vasquez", role: "Smartgunner" },
];

export default function App() {
  const [selectedId, setSelectedId] = React.useState(null);

  const conditionalRowStyles = [
    {
      when: row => row.id === selectedId,
      style: {
        backgroundColor: "#fff7ed", // amber-50
        boxShadow: "inset 3px 0 0 #f59e0b",
      },
    },
  ];

  return (
    <div className="clicksel" style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <style>{`
        .clicksel .rdt_TableRow { cursor: pointer; transition: background-color 120ms ease; }
        .clicksel .rdt_TableRow:hover { background-color: #f9fafb; }
      `}</style>

      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Selected Styling v5 (Click-to-select)</h1>
      <DataTable
        columns={columns}
        data={data}
        // no selectableRows → no checkboxes
        onRowClicked={row => setSelectedId(row.id)}
        conditionalRowStyles={conditionalRowStyles}
      />
    </div>
  );
}


Contents of 09_selected_row_styling/01_select_rows_checkboxes/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 09_selected_row_styling/01_select_rows_checkboxes/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 09_selected_row_styling/01_select_rows_checkboxes/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 09_selected_row_styling/01_select_rows_checkboxes/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 09_selected_row_styling/01_select_rows_checkboxes/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 09_selected_row_styling/01_select_rows_checkboxes/src/App.jsx:

// App.jsx — Selected Row Styling v1 (built-in highlight)
// Easiest: enable checkboxes + built-in highlight color.

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
  { name: "Role", selector: r => r.role },
];

const data = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer (Android)" },
  { id: 4, name: "Vasquez", role: "Smartgunner" },
];

export default function App() {
  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Selected Styling v1</h1>
      <DataTable
        columns={columns}
        data={data}
        selectableRows // adds checkboxes
        selectableRowsHighlight // built-in selected bg
      />
    </div>
  );
}


Contents of 08_hover_effect/02_hover_effect_custom/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 08_hover_effect/02_hover_effect_custom/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 08_hover_effect/02_hover_effect_custom/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 08_hover_effect/02_hover_effect_custom/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 08_hover_effect/02_hover_effect_custom/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 08_hover_effect/02_hover_effect_custom/src/App.jsx:

// App.jsx — Hover Effects v2 (custom color + pointer cursor)
// Use a wrapper class to style `.rdt_TableRow:hover` with your own color.

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
  { name: "Role", selector: r => r.role },
];

const data = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer (Android)" },
  { id: 4, name: "Vasquez", role: "Smartgunner" },
];

export default function App() {
  return (
    <div className="hover2" style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <style>{`
        .hover2 .rdt_TableRow { transition: background-color 120ms ease; }
        .hover2 .rdt_TableRow:hover { background-color:rgb(235, 245, 185); cursor: pointer; }
      `}</style>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Hover v2 (Custom Color)</h1>
      <DataTable columns={columns} data={data} />
    </div>
  );
}


Contents of 08_hover_effect/01_hover_effect_property/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 08_hover_effect/01_hover_effect_property/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 08_hover_effect/01_hover_effect_property/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 08_hover_effect/01_hover_effect_property/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 08_hover_effect/01_hover_effect_property/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 08_hover_effect/01_hover_effect_property/src/App.jsx:

// App.jsx — Hover Effects v1 (built-in highlight)
// Easiest: pass `highlightOnHover` to get a subtle background on hover.

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
  { name: "Role", selector: r => r.role },
];

const data = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer (Android)" },
  { id: 4, name: "Vasquez", role: "Smartgunner" },
];

export default function App() {
  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Hover v1 (Built-in)</h1>
      <DataTable columns={columns} data={data} highlightOnHover />
    </div>
  );
}


Contents of 07_pagination/03_client_side_pagination_minimalfooter/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 07_pagination/03_client_side_pagination_minimalfooter/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 07_pagination/03_client_side_pagination_minimalfooter/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 07_pagination/03_client_side_pagination_minimalfooter/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 07_pagination/03_client_side_pagination_minimalfooter/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 07_pagination/03_client_side_pagination_minimalfooter/src/App.jsx:

// App.jsx — Pagination v4 (minimal footer)
// Hide the rows-per-page dropdown; only show the range and nav buttons.

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
];

const data = Array.from({ length: 37 }, (_, i) => ({
  id: i + 1,
  name: `Row ${i + 1}`,
}));

export default function App() {
  return (
    <div style={{ padding: 16, fontFamily: "system-ui" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Pagination v4 (Minimal)</h1>
      <DataTable
        columns={columns}
        data={data}
        pagination
        paginationPerPage={7}
        paginationComponentOptions={{
          noRowsPerPage: true, // hide the selector
          rangeSeparatorText: "of",
        }}
      />
    </div>
  );
}


Contents of 07_pagination/04_server_side_pagination/server/server.js:

// server.js — minimal fake API
import cors from "cors";
import express from "express";

const app = express();
app.use(cors());

const TOTAL = 103;
const ALL = Array.from({ length: TOTAL }, (_, i) => ({
  id: i + 1,
  name: `Item ${i + 1}`,
  note: `This is row #${i + 1} from a longer dataset.`,
}));

app.get("/items", (req, res) => {
  const page = parseInt(req.query.page) || 1;
  const perPage = parseInt(req.query.perPage) || 10;
  const start = (page - 1) * perPage;
  const slice = ALL.slice(start, start + perPage);
  res.json({ rows: slice, total: TOTAL });
});

app.listen(4000, () => console.log("API running on http://localhost:4000"));


Contents of 07_pagination/04_server_side_pagination/server/package.json:

{
  "name": "api",
  "version": "1.0.0",
  "main": "server.js",
  "type": "module",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node server.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "cors": "^2.8.5",
    "express": "^5.1.0"
  }
}


Contents of 07_pagination/04_server_side_pagination/client/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 07_pagination/04_server_side_pagination/client/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 07_pagination/04_server_side_pagination/client/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 07_pagination/04_server_side_pagination/client/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 07_pagination/04_server_side_pagination/client/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 07_pagination/04_server_side_pagination/client/src/App.jsx:

// App.jsx — React client with real API calls
import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
  { name: "Note", selector: r => r.note, wrap: true },
];

export default function App() {
  const [rows, setRows] = React.useState([]);
  const [page, setPage] = React.useState(1);
  const [perPage, setPerPage] = React.useState(10);
  const [total, setTotal] = React.useState(0);

  const fetchPage = (p = page, pp = perPage) => {
    fetch(`http://localhost:4000/items?page=${p}&perPage=${pp}`)
      .then(res => res.json())
      .then(data => {
        setRows(data.rows);
        setTotal(data.total);
      });
  };

  React.useEffect(() => {
    fetchPage(1, 10);
  }, []);

  const handlePageChange = p => {
    setPage(p);
    fetchPage(p, perPage);
  };

  const handlePerPageChange = (newPerPage, newPage) => {
    setPerPage(newPerPage);
    setPage(newPage);
    fetchPage(newPage, newPerPage);
  };

  return (
    <div style={{ padding: 16, fontFamily: "system-ui" }}>
      <h1 style={{ marginBottom: 12 }}>RDT — Real Fake API</h1>
      <DataTable
        columns={columns}
        data={rows}
        pagination
        paginationServer
        paginationTotalRows={total}
        paginationPerPage={perPage}
        onChangePage={handlePageChange}
        onChangeRowsPerPage={handlePerPageChange}
      />
    </div>
  );
}


Contents of 07_pagination/01_client_side_pagination/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 07_pagination/01_client_side_pagination/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 07_pagination/01_client_side_pagination/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 07_pagination/01_client_side_pagination/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 07_pagination/01_client_side_pagination/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 07_pagination/01_client_side_pagination/src/App.jsx:

// App.jsx — Pagination v1 (basic client-side)
// Just pass `pagination`. RDT paginates the in-memory array.

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
];

const data = Array.from({ length: 23 }, (_, i) => ({
  id: i + 1,
  name: `Row ${i + 1}`,
}));

export default function App() {
  return (
    <div style={{ padding: 16, fontFamily: "system-ui" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Pagination v1</h1>
      <DataTable
        columns={columns}
        data={data}
        pagination
        paginationPerPage={5} // small page for demo
        paginationRowsPerPageOptions={[5, 10, 15]}
      />
    </div>
  );
}


Contents of 07_pagination/02_client_side_pagination_customlabels/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 07_pagination/02_client_side_pagination_customlabels/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 07_pagination/02_client_side_pagination_customlabels/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 07_pagination/02_client_side_pagination_customlabels/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 07_pagination/02_client_side_pagination_customlabels/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 07_pagination/02_client_side_pagination_customlabels/src/App.jsx:

// App.jsx — Pagination v2 (custom labels/options)
// Tweak the footer text and available page sizes.

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
  { name: "Role", selector: r => r.role },
];

const data = Array.from({ length: 42 }, (_, i) => ({
  id: i + 1,
  name: `Person ${i + 1}`,
  role: i % 3 === 0 ? "Operator" : i % 3 === 1 ? "Supervisor" : "Analyst",
}));

export default function App() {
  return (
    <div style={{ padding: 16, fontFamily: "system-ui" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Pagination v2</h1>
      <DataTable
        columns={columns}
        data={data}
        pagination
        paginationPerPage={10}
        paginationRowsPerPageOptions={[5, 10, 20, 50]}
        paginationComponentOptions={{
          rowsPerPageText: "Filas",
          rangeSeparatorText: "de",
          selectAllRowsItem: false,
          noRowsPerPage: false, // keep the selector visible
        }}
      />
    </div>
  );
}


Contents of 03_row_striping/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 03_row_striping/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 03_row_striping/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 03_row_striping/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 03_row_striping/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 03_row_striping/src/App.jsx:

// App.jsx — Row Striping v1 (built-in prop)
// Easiest: just pass `striped`.

import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
  { name: "Role", selector: r => r.role },
];

const data = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer (Android)" },
  { id: 4, name: "Carter Burke", role: "Company Rep" },
];

export default function App() {
  return (
    <div>
      <h1>RDT — Row Striping v1</h1>
      <DataTable columns={columns} data={data} striped />
    </div>
  );
}


Contents of 12_responsive_table/04_details_button/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 12_responsive_table/04_details_button/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 12_responsive_table/04_details_button/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 12_responsive_table/04_details_button/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 12_responsive_table/04_details_button/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 12_responsive_table/04_details_button/src/App.jsx:

// App.jsx — Responsive (mobile fewer cols + Details button modal)
// Another approach: on mobile we keep only {ID, Name, Details}, and show the rest
// in a small modal when the "Details" button is pressed. On desktop we show all columns
// and hide the Details button entirely (no expandable rows API needed).

import React from "react";
import DataTable from "react-data-table-component";

// --- data ---
const ALL_COLS = [
  { id: "id", name: "ID", width: "80px", selector: r => r.id },
  { id: "name", name: "Name", selector: r => r.name, grow: 2 },
  { id: "role", name: "Role", selector: r => r.role, wrap: true, grow: 2 },
  { id: "age", name: "Age", width: "90px", right: true, selector: r => r.age },
  { id: "loc", name: "Location", selector: r => r.location, wrap: true, grow: 1 },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley",
    role: "Warrant Officer — Specialist in interstellar cargo transport and survival against xenomorph threats. Known for her leadership and resilience.",
    age: 32,
    location: "LV-426 (Hadley's Hope Colony, Acheron)",
  },
  {
    id: 2,
    name: "Dwayne Hicks",
    role: "Corporal of the Colonial Marines — Experienced in tactical combat; adept with pulse rifles, CQB, and squad leadership under extreme duress.",
    age: 28,
    location: "USS Sulaco (in orbit around LV-426)",
  },
  {
    id: 3,
    name: "Bishop",
    role: "Science Officer (Android) — Advanced synthetic assisting biological research and spacecraft ops; excels with delicate instruments.",
    age: "—",
    location: "USS Sulaco (med bay, cryo, ops core)",
  },
  {
    id: 4,
    name: "Carter Burke",
    role: "Weyland-Yutani Corporate Rep — Profit-first; skilled in negotiation, manipulation, and bureaucracy within interstellar commerce.",
    age: 35,
    location: "Weyland-Yutani HQ (Earth); temp aboard USS Sulaco",
  },
];

// --- hooks ---
function useMedia(q) {
  const [m, setM] = React.useState(() => (typeof window !== "undefined" ? window.matchMedia(q).matches : false));
  React.useEffect(() => {
    const mm = window.matchMedia(q);
    const fn = e => setM(e.matches);
    mm.addEventListener?.("change", fn);
    setM(mm.matches);
    return () => mm.removeEventListener?.("change", fn);
  }, [q]);
  return m;
}

// --- details modal ---
function DetailsModal({ openRow, onClose }) {
  if (!openRow) return null;
  return (
    <div
      role="dialog"
      aria-modal="true"
      aria-labelledby="details-title"
      onClick={onClose}
      style={{
        position: "fixed",
        inset: 0,
        background: "rgba(0,0,0,0.35)",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        padding: 16,
        zIndex: 50,
      }}
    >
      <div
        onClick={e => e.stopPropagation()}
        style={{
          width: "min(560px, 92vw)",
          background: "white",
          borderRadius: 12,
          boxShadow: "0 10px 30px rgba(0,0,0,0.15)",
          overflow: "hidden",
          fontFamily: "system-ui, sans-serif",
        }}
      >
        <div style={{ padding: "12px 16px", borderBottom: "1px solid #e5e7eb", display: "flex", alignItems: "center" }}>
          <strong id="details-title" style={{ fontSize: 16 }}>
            Details — {openRow.name}
          </strong>
          <button onClick={onClose} aria-label="Close" style={{ marginLeft: "auto" }}>
            ✕
          </button>
        </div>
        <div style={{ padding: 16, lineHeight: 1.5 }}>
          <div style={{ marginBottom: 8 }}>
            <strong>ID:</strong> {openRow.id}
          </div>
          <div style={{ marginBottom: 8 }}>
            <strong>Role:</strong> {openRow.role}
          </div>
          <div style={{ marginBottom: 8 }}>
            <strong>Age:</strong> {openRow.age}
          </div>
          <div>
            <strong>Location:</strong> {openRow.location}
          </div>
        </div>
      </div>
    </div>
  );
}

export default function App() {
  const mobile = useMedia("(max-width: 639px)");
  const [openRow, setOpenRow] = React.useState(null);

  // "Details" action column (only used on mobile)
  const detailsCol = React.useMemo(
    () => ({
      id: "act",
      name: "Details",
      width: "110px",
      cell: row => (
        <button onClick={() => setOpenRow(row)} aria-label={`Show details for ${row.name}`}>
          View
        </button>
      ),
      ignoreRowClick: true,
      allowOverflow: true,
      button: true,
    }),
    []
  );

  const columns = React.useMemo(() => {
    if (!mobile) {
      // Desktop: show all columns; no details button column.
      return ALL_COLS;
    }
    // Mobile: show fewer columns + a "Details" button column.
    return [
      { ...ALL_COLS[0] }, // ID
      { ...ALL_COLS[1] }, // Name
      detailsCol, // Action to open modal with hidden fields
    ];
  }, [mobile, detailsCol]);

  // Close modal on Escape
  React.useEffect(() => {
    const onKey = e => {
      if (e.key === "Escape") setOpenRow(null);
    };
    window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, []);

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Responsive (Mobile fewer cols + Details button modal)</h1>

      <DataTable columns={columns} data={data} dense={mobile} />

      <DetailsModal openRow={openRow} onClose={() => setOpenRow(null)} />
    </div>
  );
}


Contents of 12_responsive_table/02_few_columns/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 12_responsive_table/02_few_columns/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 12_responsive_table/02_few_columns/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 12_responsive_table/02_few_columns/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 12_responsive_table/02_few_columns/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 12_responsive_table/02_few_columns/src/App.jsx:

// App.jsx — Responsive v4 (just fewer columns on mobile, no expanders)

import React from "react";
import DataTable from "react-data-table-component";

const ALL_COLS = [
  { id: "id", name: "ID", width: "80px", selector: r => r.id },
  { id: "name", name: "Name", selector: r => r.name, grow: 2 },
  { id: "role", name: "Role", selector: r => r.role, grow: 2, wrap: true },
  { id: "age", name: "Age", width: "90px", right: true, selector: r => r.age },
  { id: "loc", name: "Location", selector: r => r.location, wrap: true },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley",
    role: "Warrant Officer — Specialist in interstellar cargo transport and survival against xenomorph threats. Known for her leadership and resilience.",
    age: 32,
    location: "LV-426 (Hadley's Hope Colony, Acheron)",
  },
  {
    id: 2,
    name: "Dwayne Hicks",
    role: "Corporal of the Colonial Marines — Experienced in tactical combat situations, adept with pulse rifles, close-quarter battle, and squad leadership under extreme duress.",
    age: 28,
    location: "USS Sulaco (United States Colonial Marine Spaceship, orbiting LV-426)",
  },
  {
    id: 3,
    name: "Bishop",
    role: "Science Officer (Android) — Advanced synthetic with programming to assist in biological research, spacecraft operations, and ethical dilemmas involving human safety. Capable of handling delicate scientific instruments with precision.",
    age: "—",
    location: "USS Sulaco, cryogenic stasis chambers and medical bay",
  },
  {
    id: 4,
    name: "Carter Burke",
    role: "Weyland-Yutani Corporate Representative — Focused on corporate profit at the expense of crew safety. Skilled in negotiation, manipulation, and bureaucratic survival tactics within the interstellar business empire.",
    age: 35,
    location: "Weyland-Yutani Headquarters, Earth; temporarily stationed aboard USS Sulaco",
  },
];

function useMedia(q) {
  const [m, setM] = React.useState(() => (typeof window !== "undefined" ? window.matchMedia(q).matches : false));
  React.useEffect(() => {
    const mm = window.matchMedia(q);
    const fn = e => setM(e.matches);
    mm.addEventListener?.("change", fn);
    setM(mm.matches);
    return () => mm.removeEventListener?.("change", fn);
  }, [q]);
  return m;
}

export default function App() {
  const mobile = useMedia("(max-width: 639px)");

  const columns = React.useMemo(() => {
    if (!mobile) return ALL_COLS;
    // On mobile just keep a minimal set
    return ALL_COLS.map(c => ({ ...c, omit: !new Set(["id", "name"]).has(c.id) }));
  }, [mobile]);

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Responsive v4 (Hide Columns on Mobile)</h1>
      <DataTable columns={columns} data={data} dense={mobile} />
    </div>
  );
}


Contents of 12_responsive_table/05_multi_level_header/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 12_responsive_table/05_multi_level_header/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 12_responsive_table/05_multi_level_header/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 12_responsive_table/05_multi_level_header/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 12_responsive_table/05_multi_level_header/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 12_responsive_table/05_multi_level_header/src/App.jsx:

// App.jsx — Grouped Headers (2 buttons toggle column groups; super simple)
// Two buttons above the table header switch which columns are shown.
// Group A: ID, Name, Role
// Group B: Age, Location
// This mimics multi-row headers by conditionally showing grouped columns.

import React from "react";
import DataTable from "react-data-table-component";

const BASE_COLS = [
  { id: "id", name: "ID", selector: r => r.id, width: "90px" },
  { id: "name", name: "Name", selector: r => r.name, grow: 2, wrap: true },
  { id: "role", name: "Role", selector: r => r.role, grow: 2, wrap: true },
  { id: "age", name: "Age", selector: r => r.age, width: "110px", right: true },
  { id: "loc", name: "Location", selector: r => r.location, grow: 2, wrap: true },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley",
    role: "Warrant Officer — decisive command; quarantine enforcement.",
    age: 32,
    location: "LV-426 (Hadley's Hope), Acheron",
  },
  { id: 2, name: "Dwayne Hicks", role: "Corporal — methodical NCO; coordinates defense and evac.", age: 28, location: "USS Sulaco — dropship bay" },
  {
    id: 3,
    name: "Bishop",
    role: "Science Officer (Android) — EVA precision; ethical routines.",
    age: "—",
    location: "Sulaco ops core; medbay; diagnostics",
  },
  {
    id: 4,
    name: "Carter J. Burke",
    role: "WY Corporate Rep — profit-first; legal risk deflection.",
    age: 35,
    location: "WY HQ (Earth); temp aboard Sulaco",
  },
];

export default function App() {
  const [group, setGroup] = React.useState("A"); // "A" or "B"

  const visible = React.useMemo(() => {
    return group === "A"
      ? new Set(["id", "name", "role"]) // primary info
      : new Set(["age", "loc"]); // extra info
  }, [group]);

  const columns = React.useMemo(() => BASE_COLS.map(c => ({ ...c, omit: !visible.has(c.id) })), [visible]);

  return (
    <div style={{ padding: 16, fontFamily: "system-ui, sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 10 }}>RDT — Grouped Headers (2 buttons)</h1>

      {/* Grouped headers bar (clickable) */}
      <div
        style={{
          display: "flex",
          gap: 8,
          marginBottom: 6,
          alignItems: "center",
        }}
      >
        <button
          onClick={() => setGroup("A")}
          aria-pressed={group === "A"}
          style={{
            padding: "6px 10px",
            borderRadius: 8,
            border: "1px solid #e5e7eb",
            background: group === "A" ? "#e2e8f0" : "#f8fafc",
            fontWeight: 600,
          }}
        >
          Primary (ID • Name • Role)
        </button>
        <button
          onClick={() => setGroup("B")}
          aria-pressed={group === "B"}
          style={{
            padding: "6px 10px",
            borderRadius: 8,
            border: "1px solid #e5e7eb",
            background: group === "B" ? "#e2e8f0" : "#f8fafc",
            fontWeight: 600,
          }}
        >
          Extra (Age • Location)
        </button>
      </div>

      <DataTable
        columns={columns}
        data={data}
        customStyles={{
          table: { style: { width: "100%", border: "1px solid #e5e7eb", borderRadius: 8, overflow: "hidden" } },
          headRow: { style: { background: "#f8fafc", minHeight: 44 } },
          rows: { style: { minHeight: 46 } },
        }}
        dense
      />
    </div>
  );
}


Contents of 12_responsive_table/03_few_columns_expandable_rows/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 12_responsive_table/03_few_columns_expandable_rows/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 12_responsive_table/03_few_columns_expandable_rows/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 12_responsive_table/03_few_columns_expandable_rows/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 12_responsive_table/03_few_columns_expandable_rows/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 12_responsive_table/03_few_columns_expandable_rows/src/App.jsx:

// App.jsx — Responsive v3 (compact + expandable details on mobile)
// Strategy: on small screens show only key columns; reveal the rest via expandable rows.
// On desktop, show all columns and disable expanders.

import React from "react";
import DataTable from "react-data-table-component";

const ALL_COLS = [
  { id: "id", name: "ID", width: "80px", selector: r => r.id },
  { id: "name", name: "Name", selector: r => r.name, grow: 2 },
  { id: "role", name: "Role", selector: r => r.role, grow: 2, wrap: true },
  { id: "age", name: "Age", width: "90px", right: true, selector: r => r.age },
  { id: "loc", name: "Location", selector: r => r.location, wrap: true },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley",
    role: "Warrant Officer — Specialist in interstellar cargo transport and survival against xenomorph threats. Known for her leadership and resilience.",
    age: 32,
    location: "LV-426 (Hadley's Hope Colony, Acheron)",
  },
  {
    id: 2,
    name: "Dwayne Hicks",
    role: "Corporal of the Colonial Marines — Experienced in tactical combat situations, adept with pulse rifles, close-quarter battle, and squad leadership under extreme duress.",
    age: 28,
    location: "USS Sulaco (United States Colonial Marine Spaceship, orbiting LV-426)",
  },
  {
    id: 3,
    name: "Bishop",
    role: "Science Officer (Android) — Advanced synthetic with programming to assist in biological research, spacecraft operations, and ethical dilemmas involving human safety. Capable of handling delicate scientific instruments with precision.",
    age: "—",
    location: "USS Sulaco, cryogenic stasis chambers and medical bay",
  },
  {
    id: 4,
    name: "Carter Burke",
    role: "Weyland-Yutani Corporate Representative — Focused on corporate profit at the expense of crew safety. Skilled in negotiation, manipulation, and bureaucratic survival tactics within the interstellar business empire.",
    age: 35,
    location: "Weyland-Yutani Headquarters, Earth; temporarily stationed aboard USS Sulaco",
  },
];

function useMedia(q) {
  const [m, setM] = React.useState(() => (typeof window !== "undefined" ? window.matchMedia(q).matches : false));
  React.useEffect(() => {
    const mm = window.matchMedia(q);
    const fn = e => setM(e.matches);
    mm.addEventListener?.("change", fn);
    setM(mm.matches);
    return () => mm.removeEventListener?.("change", fn);
  }, [q]);
  return m;
}

const Expand = ({ data }) => (
  <div style={{ padding: 12, background: "#f9fafb", borderTop: "1px solid #e5e7eb" }}>
    <div>
      <strong>Role:</strong> {data.role}
    </div>
    <div>
      <strong>Age:</strong> {data.age}
    </div>
    <div>
      <strong>Location:</strong> {data.location}
    </div>
  </div>
);

export default function App() {
  const mobile = useMedia("(max-width: 639px)");

  const columns = React.useMemo(() => {
    if (!mobile) return ALL_COLS;
    // On mobile show a minimal set; others via expandable content
    return ALL_COLS.map(c => ({ ...c, omit: !new Set(["id", "name"]).has(c.id) }));
  }, [mobile]);

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Responsive v3 (Expandable on Mobile)</h1>
      <DataTable columns={columns} data={data} expandableRows={mobile} expandableRowsComponent={Expand} dense={mobile} />
    </div>
  );
}


Contents of 12_responsive_table/01_fixed_size_table_scrollable/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 12_responsive_table/01_fixed_size_table_scrollable/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 12_responsive_table/01_fixed_size_table_scrollable/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 12_responsive_table/01_fixed_size_table_scrollable/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 12_responsive_table/01_fixed_size_table_scrollable/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 12_responsive_table/01_fixed_size_table_scrollable/src/App.jsx:

// App.jsx — Responsive v1 (overflow scroll on small screens)
// Strategy: give columns fixed px widths and set table width to 'max-content' so it
// sizes to the sum of columns. Wrap in overflow-x:auto so phones can scroll sideways.

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", width: "80px", selector: r => r.id },
  { name: "Name", width: "220px", selector: r => r.name, wrap: true },
  { name: "Role", width: "260px", selector: r => r.role, wrap: true },
  { name: "Age", width: "90px", right: true, selector: r => r.age },
  { name: "Location", width: "240px", selector: r => r.location, wrap: true },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley",
    role: "Warrant Officer — Specialist in interstellar cargo transport and survival against xenomorph threats. Known for her leadership and resilience.",
    age: 32,
    location: "LV-426 (Hadley's Hope Colony, Acheron)",
  },
  {
    id: 2,
    name: "Dwayne Hicks",
    role: "Corporal of the Colonial Marines — Experienced in tactical combat situations, adept with pulse rifles, close-quarter battle, and squad leadership under extreme duress.",
    age: 28,
    location: "USS Sulaco (United States Colonial Marine Spaceship, orbiting LV-426)",
  },
  {
    id: 3,
    name: "Bishop",
    role: "Science Officer (Android) — Advanced synthetic with programming to assist in biological research, spacecraft operations, and ethical dilemmas involving human safety. Capable of handling delicate scientific instruments with precision.",
    age: "—",
    location: "USS Sulaco, cryogenic stasis chambers and medical bay",
  },
  {
    id: 4,
    name: "Carter Burke",
    role: "Weyland-Yutani Corporate Representative — Focused on corporate profit at the expense of crew safety. Skilled in negotiation, manipulation, and bureaucratic survival tactics within the interstellar business empire.",
    age: 35,
    location: "Weyland-Yutani Headquarters, Earth; temporarily stationed aboard USS Sulaco",
  },
];

const customStyles = {
  table: { style: { width: "max-content", border: "1px solid #e5e7eb", borderRadius: 10, overflow: "hidden" } },
  headRow: { style: { background: "#f9fafb", borderBottom: "1px solid #e5e7eb" } },
  rows: { style: { borderBottom: "1px solid #f1f5f9" } },
};

export default function App() {
  return (
    <div style={{ padding: 16, overflowX: "auto", fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Responsive v1 (Horizontal Scroll)</h1>
      <DataTable columns={columns} data={data} customStyles={customStyles} dense />
    </div>
  );
}


Contents of 10_sortable_columns/01_sortable_column_indicator/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 10_sortable_columns/01_sortable_column_indicator/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 10_sortable_columns/01_sortable_column_indicator/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 10_sortable_columns/01_sortable_column_indicator/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 10_sortable_columns/01_sortable_column_indicator/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 10_sortable_columns/01_sortable_column_indicator/src/App.jsx:

// App.jsx — Sortable Indicators v1 (built-in)
// Simplest: mark columns `sortable`. RDT shows its default indicator.

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { id: "id", name: "ID", selector: r => r.id, sortable: true, width: "80px" },
  { id: "name", name: "Name", selector: r => r.name, sortable: true },
  { id: "role", name: "Role", selector: r => r.role, sortable: true },
];

const data = [
  { id: 3, name: "Bishop", role: "Science Officer" },
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal" },
];

export default function App() {
  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Sortable v1 (Built-in)</h1>
      <DataTable columns={columns} data={data} />
    </div>
  );
}


Contents of 10_sortable_columns/02_sortable_columns_custom_functions/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 10_sortable_columns/02_sortable_columns_custom_functions/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 10_sortable_columns/02_sortable_columns_custom_functions/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 10_sortable_columns/02_sortable_columns_custom_functions/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 10_sortable_columns/02_sortable_columns_custom_functions/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 10_sortable_columns/02_sortable_columns_custom_functions/src/App.jsx:

// App.jsx — Sortable Indicators v4 (custom sort functions + visual cue)
// Case-insensitive text sort, numeric sort, and date sort. Header shows active arrow like v3.

import React from "react";
import DataTable from "react-data-table-component";

const rows = [
  { id: 1, name: "ellen ripley", role: "Warrant Officer", age: 32, started: "2122-06-12" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal", age: 28, started: "2179-07-18" },
  { id: 3, name: "bishop", role: "Science Officer", age: 4, started: "2179-07-18" },
  { id: 4, name: "Vasquez", role: "Smartgunner", age: 27, started: "2179-07-17" },
];

function arrowHeader(label, isActive, dir) {
  const arrow = isActive ? (dir === "asc" ? "▲" : "▼") : "⇅";
  return (
    <span style={{ display: "inline-flex", alignItems: "center", gap: 6 }}>
      {label}
      <span style={{ opacity: 0.7, fontSize: 12 }}>{arrow}</span>
    </span>
  );
}

export default function App() {
  const [active, setActive] = React.useState({ id: "name", dir: "asc" });

  const columns = [
    {
      id: "name",
      name: arrowHeader("Name", active.id === "name", active.dir),
      selector: r => r.name,
      sortable: true,
      sortFunction: (a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()),
    },
    {
      id: "age",
      name: arrowHeader("Age", active.id === "age", active.dir),
      selector: r => r.age,
      sortable: true,
      sortFunction: (a, b) => a.age - b.age,
      right: true,
      width: "100px",
    },
    {
      id: "started",
      name: arrowHeader("Started", active.id === "started", active.dir),
      selector: r => r.started,
      sortable: true,
      sortFunction: (a, b) => new Date(a.started) - new Date(b.started),
      width: "160px",
    },
    { id: "role", name: arrowHeader("Role", active.id === "role", active.dir), selector: r => r.role, sortable: true },
  ];

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Sortable v4 (Custom SortFns)</h1>
      <DataTable columns={columns} data={rows} defaultSortFieldId="name" onSort={(column, dir) => setActive({ id: column.id, dir })} />
    </div>
  );
}


Contents of 02_borders/04_full_grid_borders_custom_styles/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 02_borders/04_full_grid_borders_custom_styles/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 02_borders/04_full_grid_borders_custom_styles/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 02_borders/04_full_grid_borders_custom_styles/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 02_borders/04_full_grid_borders_custom_styles/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 02_borders/04_full_grid_borders_custom_styles/src/App.jsx:

// App.jsx — Borders v4: verticals using customStyles.cells/headCells + CSS to drop last border
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
  { name: "Role", selector: r => r.role },
];

const data = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer (Android)" },
  { id: 4, name: "Carter Burke", role: "Company Rep" },
];

const customStyles = {
  table: { style: { border: "1px solid #e5e7eb", borderRadius: 10, overflow: "hidden" } },
  headRow: { style: { borderBottom: "1px solid #e5e7eb", background: "#f9fafb" } },
  rows: { style: { borderBottom: "1px solid #e5e7eb" } },
  headCells: { style: { borderRight: "1px solid #e5e7eb" } },
  cells: { style: { borderRight: "1px solid #e5e7eb" } },
};

export default function App() {
  return (
    <div>
      <h1>RDT — Borders v4</h1>
      <div>
        <DataTable columns={columns} data={data} customStyles={customStyles} dense />
      </div>
    </div>
  );
}


Contents of 02_borders/01_horizontal_separators_only/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 02_borders/01_horizontal_separators_only/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 02_borders/01_horizontal_separators_only/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 02_borders/01_horizontal_separators_only/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 02_borders/01_horizontal_separators_only/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 02_borders/01_horizontal_separators_only/src/App.jsx:

// App.jsx — Borders v2: horizontal separators using customStyles (no vertical lines)
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
  { name: "Role", selector: r => r.role },
];

const data = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer (Android)" },
  { id: 4, name: "Carter Burke", role: "Company Rep" },
];

// only top/frame + horizontal row lines
const customStyles = {
  table: { style: { border: "1px solid #e5e7eb", borderRadius: 10, overflow: "hidden" } },
  headRow: { style: { borderBottom: "1px solid #e5e7eb", backgroundColor: "#f9fafb" } },
  rows: { style: { borderBottom: "1px solid #e5e7eb" } },
};

export default function App() {
  return (
    <div>
      <h1>RDT — Borders v2</h1>
      <DataTable 
        columns={columns}
        data={data}
        customStyles={customStyles}
        dense />
    </div>
  );
}


Contents of 02_borders/03_full_grid_borders/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 02_borders/03_full_grid_borders/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 02_borders/03_full_grid_borders/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 02_borders/03_full_grid_borders/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 02_borders/03_full_grid_borders/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client.js";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 02_borders/03_full_grid_borders/src/App.jsx:

// App.jsx — RDT "Borders" (simple)
// Just render a table with visible cell borders using tiny CSS.

import DataTable from "react-data-table-component";

// columns: minimal
const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
  { name: "Role", selector: r => r.role },
];

// sample data
const data = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer (Android)" },
  { id: 4, name: "Carter Burke", role: "Company Rep" },
];

export default function App() {
  return (
    <div>
      {/* Tiny CSS to draw borders per cell/row */}
      <style>{`
        .rdt-borders { border: 1px solid #e5e7eb; border-radius: 8px; overflow: hidden; }
        .rdt-borders .rdt_TableHeadRow,
        .rdt-borders .rdt_TableRow { border-bottom: 1px solid #e5e7eb; }
        .rdt-borders .rdt_TableCol,
        .rdt-borders .rdt_TableCell { border-right: 1px solid #e5e7eb; }
        /* no right border on last column (head + body) */
        .rdt-borders .rdt_TableCol:last-child,
        .rdt-borders .rdt_TableCell:last-child { border-right: none; }
        /* optional subtle header bg */
        .rdt-borders .rdt_TableHeadRow { background: #f9fafb; }
      `}</style>

      <h1>RDT — Borders</h1>

      {/* Wrapper class scopes the borders */}
      <div className="rdt-borders">
        <DataTable columns={columns} data={data} dense persistTableHead />
      </div>
    </div>
  );
}


Contents of 02_borders/02_vertical_column_separators/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 02_borders/02_vertical_column_separators/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 02_borders/02_vertical_column_separators/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 02_borders/02_vertical_column_separators/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 02_borders/02_vertical_column_separators/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client.js";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 02_borders/02_vertical_column_separators/src/App.jsx:

// App.jsx — Borders v3: vertical column lines via column.style
import DataTable from "react-data-table-component";

const columns = [
  // add right border on first two columns; leave the last column clean
  { name: "ID", selector: r => r.id, width: "80px", style: { borderRight: "1px solid #e5e7eb" } },
  { name: "Name", selector: r => r.name, style: { borderRight: "1px solid #e5e7eb" } },
  { name: "Role", selector: r => r.role }, // no border → cleaner last column
];

const data = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer (Android)" },
  { id: 4, name: "Carter Burke", role: "Company Rep" },
];

const customStyles = {
  table: { style: { border: "1px solid #e5e7eb", borderRadius: 10, overflow: "hidden" } },
  headRow: { style: { borderBottom: "1px solid #e5e7eb", backgroundColor: "#f9fafb" } },
  rows: { style: { borderBottom: "1px solid #e5e7eb" } },
  headCells: {
    style: {
      /* match column verticals */
    },
  },
};

export default function App() {
  return (
    <div>
      <h1>RDT — Borders v3</h1>
      <DataTable columns={columns} data={data} customStyles={customStyles} dense />
    </div>
  );
}


Contents of 13_global_search/02_search_all_columns_and_filter_debounce_trick/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 13_global_search/02_search_all_columns_and_filter_debounce_trick/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 13_global_search/02_search_all_columns_and_filter_debounce_trick/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 13_global_search/02_search_all_columns_and_filter_debounce_trick/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 13_global_search/02_search_all_columns_and_filter_debounce_trick/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 13_global_search/02_search_all_columns_and_filter_debounce_trick/src/App.jsx:

// App.jsx — Global Search v2 (debounced input)
// Debounce user input by 300ms to avoid filtering on every keystroke.

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name },
  { name: "Role", selector: r => r.role, wrap: true },
  { name: "Location", selector: r => r.location, wrap: true },
];

const ALL = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer", location: "LV-426" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal", location: "USS Sulaco" },
  { id: 3, name: "Bishop", role: "Science Officer", location: "USS Sulaco" },
  { id: 4, name: "Vasquez", role: "Smartgunner", location: "LV-426" },
];

function useDebouncedValue(value, delay = 300) {
  const [v, setV] = React.useState(value);
  React.useEffect(() => {
    const t = setTimeout(() => setV(value), delay);
    return () => clearTimeout(t);
  }, [value, delay]);
  return v;
}

export default function App() {
  const [raw, setRaw] = React.useState("");
  const q = useDebouncedValue(raw, 300);

  const filtered = React.useMemo(() => {
    const s = q.trim().toLowerCase();
    if (!s) return ALL;
    return ALL.filter(r => [r.name, r.role, r.location].some(v => String(v).toLowerCase().includes(s)));
  }, [q]);

  const SearchBox = (
    <input
      placeholder="Search… (debounced)"
      value={raw}
      onChange={e => setRaw(e.target.value)}
      style={{ width: 260, padding: "6px 10px", borderRadius: 8, border: "1px solid #e5e7eb" }}
    />
  );

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 10 }}>RDT — Global Search v2 (Debounced)</h1>
      <DataTable columns={columns} data={filtered} subHeader subHeaderComponent={SearchBox} />
    </div>
  );
}


Contents of 13_global_search/04_server_side_search/server/server.js:

// server.js — global search + server-side pagination
import cors from "cors";
import express from "express";

const app = express();
app.use(cors());

// Fake dataset
const TOTAL = 103;
const ALL = Array.from({ length: TOTAL }, (_, i) => ({
  id: i + 1,
  name: `Item ${i + 1}`,
  note: `This is row #${i + 1} from a longer dataset.`,
}));

/**
 * GET /items?q=&page=&perPage=
 * - q: string, case-insensitive global search across id/name/note
 * - page: 1-based
 * - perPage: page size
 * Returns: { rows, total, page, perPage }
 */
app.get("/items", (req, res) => {
  const q = String(req.query.q ?? "").trim().toLowerCase();
  const page = Math.max(parseInt(req.query.page) || 1, 1);
  const perPage = Math.max(parseInt(req.query.perPage) || 10, 1);

  const filtered = q
    ? ALL.filter(r =>
        [r.id, r.name, r.note]
          .map(v => String(v).toLowerCase())
          .some(v => v.includes(q))
      )
    : ALL;

  const total = filtered.length;
  const start = (page - 1) * perPage;
  const rows = filtered.slice(start, start + perPage);

  res.json({ rows, total, page, perPage });
});

app.listen(4000, () => console.log("API running on http://localhost:4000"));


Contents of 13_global_search/04_server_side_search/server/package.json:

{
  "name": "api",
  "version": "1.0.0",
  "main": "server.js",
  "type": "module",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node server.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "cors": "^2.8.5",
    "express": "^5.1.0"
  }
}


Contents of 13_global_search/04_server_side_search/client/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 13_global_search/04_server_side_search/client/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 13_global_search/04_server_side_search/client/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 13_global_search/04_server_side_search/client/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 13_global_search/04_server_side_search/client/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 13_global_search/04_server_side_search/client/src/App.jsx:

// App.jsx — Server global search + server pagination
import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name, grow: 2 },
  { name: "Note", selector: r => r.note, wrap: true, grow: 3 },
];

export default function App() {
  const [q, setQ] = React.useState("");
  const [rows, setRows] = React.useState([]);
  const [total, setTotal] = React.useState(0);
  const [page, setPage] = React.useState(1);       // 1-based
  const [perPage, setPerPage] = React.useState(10);
  const [loading, setLoading] = React.useState(false);

  // Fetch API
  const fetchData = React.useCallback((signal, params) => {
    const { page, perPage, q } = params;
    const url = new URL("http://localhost:4000/items");
    url.searchParams.set("page", page);
    url.searchParams.set("perPage", perPage);
    if (q) url.searchParams.set("q", q);

    return fetch(url, { signal })
      .then(r => r.json())
      .then(({ rows, total }) => {
        setRows(rows);
        setTotal(total);
      });
  }, []);

  // Debounce only the search term; page/perPage changes fetch immediately.
  React.useEffect(() => {
    const controller = new AbortController();
    const doFetch = () => {
      setLoading(true);
      fetchData(controller.signal, { page, perPage, q })
        .catch(() => {})
        .finally(() => setLoading(false));
    };

    let t;
    if (q.trim()) {
      t = setTimeout(doFetch, 250); // debounce searching
    } else {
      doFetch(); // no debounce when q is empty
    }

    return () => {
      controller.abort();
      if (t) clearTimeout(t);
    };
  }, [q, page, perPage, fetchData]);

  const handleChangePage = (p) => {
    setPage(p); // triggers fetch
  };

  const handleChangeRowsPerPage = (newPerPage, newPage) => {
    setPerPage(newPerPage);
    setPage(newPage); // RDT suggests passing the page it thinks we’re on
  };

  // When typing, reset to page 1 so the user sees the first matches
  const onSearchChange = (e) => {
    setQ(e.target.value);
    setPage(1);
  };

  const from = total === 0 ? 0 : (page - 1) * perPage + 1;
  const to = Math.min(page * perPage, total);

  const SearchBox = (
    <input
      placeholder="Search by ID, Name or Note…"
      value={q}
      onChange={onSearchChange}
      style={{
        width: 300,
        padding: "6px 10px",
        borderRadius: 8,
        border: "1px solid #e5e7eb",
      }}
    />
  );

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 8 }}>RDT — Server Search + Server Pagination</h1>
      <div style={{ marginBottom: 8, color: "#6b7280", fontSize: 14 }}>
        {loading ? "Loading…" : `Showing ${from}-${to} of ${total}`}
      </div>
      <DataTable
        columns={columns}
        data={rows}
        subHeader
        subHeaderComponent={SearchBox}
        pagination
        paginationServer
        paginationTotalRows={total}
        paginationPerPage={perPage}
        onChangePage={handleChangePage}
        onChangeRowsPerPage={handleChangeRowsPerPage}
        progressPending={loading}
        highlightOnHover
        dense
      />
    </div>
  );
}


Contents of 13_global_search/03_search_all_columns_and_filter_highlight_matches copy/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 13_global_search/03_search_all_columns_and_filter_highlight_matches copy/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 13_global_search/03_search_all_columns_and_filter_highlight_matches copy/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 13_global_search/03_search_all_columns_and_filter_highlight_matches copy/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 13_global_search/03_search_all_columns_and_filter_highlight_matches copy/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 13_global_search/03_search_all_columns_and_filter_highlight_matches copy/src/App.jsx:

// App.jsx — Global Search (true server-side style with debounce + loading)
// What this shows:
// - A search box in the subHeader
// - Debounced keystrokes (300ms)
// - "Server" fetch that returns ONLY the current page slice (simulated here)
// - paginationServer + sortServer + progressPending (loading)
//
// Replace `fakeApi` with your real endpoint. The UI code stays the same.

import React from "react";
import DataTable from "react-data-table-component";

// ----- Columns -----
const columns = [
  { id: "id", name: "ID", selector: r => r.id, sortable: true, width: "88px", right: true },
  { id: "name", name: "Name", selector: r => r.name, sortable: true, grow: 2 },
  { id: "role", name: "Role", selector: r => r.role, sortable: true, wrap: true, grow: 2 },
  { id: "location", name: "Location", selector: r => r.location, sortable: true, wrap: true, grow: 1 },
];

// ----- Demo dataset (pretend this lives on the server) -----
const ALL = Array.from({ length: 200 }, (_, i) => ({
  id: i + 1,
  name: ["Ellen Ripley", "Dwayne Hicks", "Bishop", "Vasquez", "Hudson", "Gorman"][i % 6] + ` ${i + 1}`,
  role: ["Warrant Officer", "Corporal", "Science Officer", "Smartgunner"][i % 4],
  location: i % 2 ? "USS Sulaco" : "LV-426",
}));

// ----- Simulated API (server) -----
// Supports q (query), sort (column id + dir), page (1-based), perPage
function fakeApi({ q, sortId, dir, page, perPage, signal }) {
  return new Promise((resolve, reject) => {
    const t = setTimeout(() => {
      // 1) search
      const qnorm = q.trim().toLowerCase();
      let rows = !qnorm ? ALL : ALL.filter(r => [r.name, r.role, r.location].some(v => String(v).toLowerCase().includes(qnorm)));

      const total = rows.length;

      // 2) sort (server)
      if (sortId) {
        const getter = sortId === "id" ? r => r.id : sortId === "name" ? r => r.name : sortId === "role" ? r => r.role : r => r.location;

        rows = [...rows].sort((a, b) => {
          const av = getter(a);
          const bv = getter(b);
          const cmp = typeof av === "number" && typeof bv === "number" ? av - bv : String(av).localeCompare(String(bv));
          return dir === "asc" ? cmp : -cmp;
        });
      }

      // 3) page slice (server)
      const start = (page - 1) * perPage;
      const data = rows.slice(start, start + perPage);

      resolve({ data, total });
    }, 350); // simulate network time

    signal?.addEventListener("abort", () => {
      clearTimeout(t);
      reject(new DOMException("Aborted", "AbortError"));
    });
  });
}

// ----- Small debounce hook -----
function useDebounced(value, ms = 300) {
  const [v, setV] = React.useState(value);
  React.useEffect(() => {
    const t = setTimeout(() => setV(value), ms);
    return () => clearTimeout(t);
  }, [value, ms]);
  return v;
}

export default function App() {
  // query/sort/pagination UI state
  const [rawQ, setRawQ] = React.useState("");
  const q = useDebounced(rawQ, 300);

  const [page, setPage] = React.useState(1);
  const [perPage, setPerPage] = React.useState(10);

  const [sort, setSort] = React.useState({ id: "id", dir: "asc" });

  // fetched data
  const [rows, setRows] = React.useState([]);
  const [total, setTotal] = React.useState(0);
  const [loading, setLoading] = React.useState(false);
  const abortRef = React.useRef(null);

  // central fetcher — call whenever q/sort/page/perPage change
  const fetchRows = React.useCallback(async () => {
    abortRef.current?.abort?.();
    const controller = new AbortController();
    abortRef.current = controller;

    setLoading(true);
    try {
      const res = await fakeApi({
        q,
        sortId: sort.id,
        dir: sort.dir,
        page,
        perPage,
        signal: controller.signal,
      });
      setRows(res.data);
      setTotal(res.total);
    } catch (e) {
      if (e.name !== "AbortError") console.error(e);
    } finally {
      setLoading(false);
    }
  }, [q, sort, page, perPage]);

  // trigger fetch on dependencies change
  React.useEffect(() => {
    fetchRows();
  }, [fetchRows]);

  // Search box UI (in subHeader)
  const SearchBox = (
    <input
      placeholder="Search (server-side)…"
      value={rawQ}
      onChange={e => {
        setRawQ(e.target.value);
        setPage(1);
      }} // reset to page 1 on new query
      style={{ width: 280, padding: "6px 10px", borderRadius: 8, border: "1px solid #e5e7eb" }}
    />
  );

  return (
    <div style={{ padding: 16, fontFamily: "system-ui, sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 10 }}>RDT — Server-side Global Search</h1>

      <DataTable
        columns={columns}
        data={rows}
        subHeader
        subHeaderComponent={SearchBox}
        progressPending={loading}
        // server-style pagination
        pagination
        paginationServer
        paginationTotalRows={total}
        paginationPerPage={perPage}
        onChangePage={setPage}
        onChangeRowsPerPage={(n, p) => {
          setPerPage(n);
          setPage(p);
        }}
        // server-style sorting
        sortServer
        defaultSortFieldId="id"
        defaultSortAsc
        onSort={(column, dir) => {
          setSort({ id: column.id, dir });
          setPage(1);
        }}
      />
    </div>
  );
}


Contents of 13_global_search/03_search_all_columns_and_filter_highlight_matches/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 13_global_search/03_search_all_columns_and_filter_highlight_matches/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 13_global_search/03_search_all_columns_and_filter_highlight_matches/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 13_global_search/03_search_all_columns_and_filter_highlight_matches/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 13_global_search/03_search_all_columns_and_filter_highlight_matches/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 13_global_search/03_search_all_columns_and_filter_highlight_matches/src/App.jsx:

// App.jsx — Global Search v4 (highlight matches)
// Same as v1 but highlights matching substrings within Name/Role/Location.

import React from "react";
import DataTable from "react-data-table-component";

function highlight(text, q) {
  if (!q) return text;
  const s = q.trim();
  if (!s) return text;
  const idx = text.toLowerCase().indexOf(s.toLowerCase());
  if (idx === -1) return text;
  return (
    <span>
      {text.slice(0, idx)}
      <mark>{text.slice(idx, idx + s.length)}</mark>
      {text.slice(idx + s.length)}
    </span>
  );
}

const baseCols = q => [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", cell: r => <span>{highlight(r.name, q)}</span>, grow: 2 },
  { name: "Role", cell: r => <span>{highlight(r.role, q)}</span>, grow: 2, wrap: true },
  { name: "Location", cell: r => <span>{highlight(r.location, q)}</span>, grow: 1, wrap: true },
];

const ALL = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer", location: "LV-426" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal", location: "USS Sulaco" },
  { id: 3, name: "Bishop", role: "Science Officer", location: "USS Sulaco" },
  { id: 4, name: "Vasquez", role: "Smartgunner", location: "LV-426" },
];

export default function App() {
  const [q, setQ] = React.useState("");

  const filtered = React.useMemo(() => {
    const s = q.trim().toLowerCase();
    if (!s) return ALL;
    return ALL.filter(r => [r.name, r.role, r.location].some(v => String(v).toLowerCase().includes(s)));
  }, [q]);

  const SearchBox = (
    <input
      placeholder="Search… (highlights matches)"
      value={q}
      onChange={e => setQ(e.target.value)}
      style={{ width: 280, padding: "6px 10px", borderRadius: 8, border: "1px solid #e5e7eb" }}
    />
  );

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 10 }}>RDT — Global Search v4 (Highlight)</h1>
      <DataTable columns={baseCols(q)} data={filtered} subHeader subHeaderComponent={SearchBox} />
    </div>
  );
}


Contents of 13_global_search/01_search_all_columns_and_filter/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 13_global_search/01_search_all_columns_and_filter/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 13_global_search/01_search_all_columns_and_filter/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 13_global_search/01_search_all_columns_and_filter/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 13_global_search/01_search_all_columns_and_filter/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 13_global_search/01_search_all_columns_and_filter/src/App.jsx:

// App.jsx — Global Search v1 (basic client-side filter)
// Simple text input filters rows by Name/Role/Location (case-insensitive).
// Uses RDT's subHeader to place the search box above the table.

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name, grow: 2 },
  { name: "Role", selector: r => r.role, grow: 2, wrap: true },
  { name: "Location", selector: r => r.location, grow: 1, wrap: true },
];

const ALL = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer", location: "LV-426" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal", location: "USS Sulaco" },
  { id: 3, name: "Bishop", role: "Science Officer", location: "USS Sulaco" },
  { id: 4, name: "Vasquez", role: "Smartgunner", location: "LV-426" },
];

export default function App() {
  const [q, setQ] = React.useState("");

  const filtered = React.useMemo(() => {
    const s = q.trim().toLowerCase();
    if (!s) return ALL;
    return ALL.filter(r => [r.name, r.role, r.location].some(v => String(v).toLowerCase().includes(s)));
  }, [q]);

  const SearchBox = (
    <input
      placeholder="Search all columns…"
      value={q}
      onChange={e => setQ(e.target.value)}
      style={{ width: 260, padding: "6px 10px", borderRadius: 8, border: "1px solid #e5e7eb" }}
    />
  );

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 10 }}>RDT — Global Search v1</h1>
      <DataTable columns={columns} data={filtered} subHeader subHeaderComponent={SearchBox} />
    </div>
  );
}


Contents of 06_text_wrapping_truncation/04_wrap_threeline/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 06_text_wrapping_truncation/04_wrap_threeline/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 06_text_wrapping_truncation/04_wrap_threeline/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 06_text_wrapping_truncation/04_wrap_threeline/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 06_text_wrapping_truncation/04_wrap_threeline/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 06_text_wrapping_truncation/04_wrap_threeline/src/App.jsx:

// App.jsx — Truncate v3 (true three-line clamp)
// Same minWidth=0 fix; clamp to exactly 3 lines with ellipsis.

import React from "react";
import DataTable from "react-data-table-component";

const ThreeLine = ({ children }) => <div className="clamp3">{children}</div>;

const columns = [
  { name: "ID", width: "72px", style: { minWidth: 0 }, cell: r => <ThreeLine>{r.id}</ThreeLine> },
  { name: "Name", width: "280px", style: { minWidth: 0 }, cell: r => <ThreeLine>{r.name}</ThreeLine> },
  { name: "Role", width: "320px", style: { minWidth: 0 }, cell: r => <ThreeLine>{r.role}</ThreeLine> },
  { name: "Location", width: "340px", style: { minWidth: 0 }, cell: r => <ThreeLine>{r.location}</ThreeLine> },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley — USCSS Nostromo warrant officer noted for decisive, high-risk containment protocols and strict quarantine enforcement.",
    role: "Warrant Officer handling shipboard ops, cargo quarantine compliance, evidence preservation, and emergency decision-making per Special Orders.",
    location: "Hadley’s Hope, Acheron (LV-426) — atmospheric processor perimeter; temporary admin sector near main power relay.",
  },
  {
    id: 2,
    name: "Dwayne Hicks — Colonial Marine NCO; calm, methodical command presence; de facto squad lead during LV-426 incident.",
    role: "Perimeter defense, motion-tracker sweeps, evac logistics, tactical fallback plans, and breach management under fire.",
    location: "USS Sulaco — UD-4L Cheyenne dropship bay; forward armory staging for rapid redeploy.",
  },
  {
    id: 3,
    name: "Bishop — Hyperdyne Systems synthetic; precision operations, surgical dexterity, probabilistic navigation, EVA pipeline interface expert.",
    role: "Android Science Officer for analytics, medical support, auto-nav guidance, and high-risk manual overrides.",
    location: "Sulaco ops core — autonav interfaces; auxiliary medbay; cargo subsystems and diagnostics.",
  },
];

const customStyles = {
  headRow: { style: { height: 48 } },
  rows: { style: { height: 82 } }, // ~3 lines tall
  cells: { style: { paddingTop: 6, paddingBottom: 6 } },
};

export default function App() {
  return (
    <div style={{ padding: 16, overflowX: "auto", fontFamily: "system-ui, sans-serif" }} className="threeline">
      <style>{`
        .threeline .clamp3 {
          display: -webkit-box;
          -webkit-box-orient: vertical;
          -webkit-line-clamp: 3;
          overflow: hidden;
        }
      `}</style>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Truncate v3 (Three-line)</h1>
      <DataTable columns={columns} data={data} dense customStyles={customStyles} />
    </div>
  );
}


Contents of 06_text_wrapping_truncation/03_wrap_twoline/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 06_text_wrapping_truncation/03_wrap_twoline/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 06_text_wrapping_truncation/03_wrap_twoline/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 06_text_wrapping_truncation/03_wrap_twoline/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 06_text_wrapping_truncation/03_wrap_twoline/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 06_text_wrapping_truncation/03_wrap_twoline/src/App.jsx:

// App.jsx — Truncate v2 (true two-line clamp)
// Fix: each column sets style.minWidth = 0 so flex children can shrink.
// The inner div uses CSS line-clamp for exactly 2 lines with ellipsis.

import React from "react";
import DataTable from "react-data-table-component";

const TwoLine = ({ children }) => <div className="clamp2">{children}</div>;

const columns = [
  { name: "ID", width: "72px", style: { minWidth: 0 }, cell: r => <TwoLine>{r.id}</TwoLine> },
  { name: "Name", width: "280px", style: { minWidth: 0 }, cell: r => <TwoLine>{r.name}</TwoLine> },
  { name: "Role", width: "320px", style: { minWidth: 0 }, cell: r => <TwoLine>{r.role}</TwoLine> },
  { name: "Location", width: "340px", style: { minWidth: 0 }, cell: r => <TwoLine>{r.location}</TwoLine> },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley — USCSS Nostromo warrant officer noted for decisive, high-risk containment protocols and strict quarantine enforcement.",
    role: "Warrant Officer handling shipboard ops, cargo quarantine compliance, evidence preservation, and emergency decision-making per Special Orders.",
    location: "Hadley’s Hope, Acheron (LV-426) — atmospheric processor perimeter; temporary admin sector near main power relay.",
  },
  {
    id: 2,
    name: "Dwayne Hicks — Colonial Marine NCO; calm, methodical command presence; de facto squad lead during LV-426 incident.",
    role: "Perimeter defense, motion-tracker sweeps, evac logistics, tactical fallback plans, and breach management under fire.",
    location: "USS Sulaco — UD-4L Cheyenne dropship bay; forward armory staging for rapid redeploy.",
  },
  {
    id: 3,
    name: "Bishop — Hyperdyne Systems synthetic; precision operations, surgical dexterity, probabilistic navigation, EVA pipeline interface expert.",
    role: "Android Science Officer for analytics, medical support, auto-nav guidance, and high-risk manual overrides.",
    location: "Sulaco ops core — autonav interfaces; auxiliary medbay; cargo subsystems and diagnostics.",
  },
];

const customStyles = {
  headRow: { style: { height: 48 } },
  rows: { style: { height: 64 } }, // ~2 lines tall
  cells: { style: { paddingTop: 6, paddingBottom: 6 } },
};

export default function App() {
  return (
    <div style={{ padding: 16, overflowX: "auto", fontFamily: "system-ui, sans-serif" }} className="twoline">
      <style>{`
        .twoline .clamp2 {
          display: -webkit-box;
          -webkit-box-orient: vertical;
          -webkit-line-clamp: 2;
          overflow: hidden;
        }
      `}</style>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Truncate v2 (Two-line)</h1>
      <DataTable columns={columns} data={data} dense customStyles={customStyles} />
    </div>
  );
}


Contents of 06_text_wrapping_truncation/02_wrap_oneline/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 06_text_wrapping_truncation/02_wrap_oneline/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 06_text_wrapping_truncation/02_wrap_oneline/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 06_text_wrapping_truncation/02_wrap_oneline/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 06_text_wrapping_truncation/02_wrap_oneline/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 06_text_wrapping_truncation/02_wrap_oneline/src/App.jsx:

// App.jsx — Truncate v1 (true one-line ellipsis)
// Fix: set column.style.minWidth = 0 so flex children can shrink,
// then render a child div with overflow:hidden; text-overflow:ellipsis; white-space:nowrap.

import React from "react";
import DataTable from "react-data-table-component";

const OneLine = ({ children }) => <div style={{ width: "100%", overflow: "hidden", textOverflow: "ellipsis", whiteSpace: "nowrap" }}>{children}</div>;

const columns = [
  { name: "ID", width: "72px", style: { minWidth: 0 }, cell: r => <OneLine>{r.id}</OneLine> },
  { name: "Name", width: "280px", style: { minWidth: 0 }, cell: r => <OneLine>{r.name}</OneLine> },
  { name: "Role", width: "320px", style: { minWidth: 0 }, cell: r => <OneLine>{r.role}</OneLine> },
  { name: "Location", width: "340px", style: { minWidth: 0 }, cell: r => <OneLine>{r.location}</OneLine> },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley — USCSS Nostromo warrant officer noted for decisive, high-risk containment protocols and strict quarantine enforcement.",
    role: "Warrant Officer handling shipboard ops, cargo quarantine compliance, evidence preservation, and emergency decision-making per Special Orders.",
    location: "Hadley’s Hope, Acheron (LV-426) — atmospheric processor perimeter; temporary admin sector near main power relay.",
  },
  {
    id: 2,
    name: "Dwayne Hicks — Colonial Marine NCO; calm, methodical command presence; de facto squad lead during LV-426 incident.",
    role: "Perimeter defense, motion-tracker sweeps, evac logistics, tactical fallback plans, and breach management under fire.",
    location: "USS Sulaco — UD-4L Cheyenne dropship bay; forward armory staging for rapid redeploy.",
  },
  {
    id: 3,
    name: "Bishop — Hyperdyne Systems synthetic; precision operations, surgical dexterity, probabilistic navigation, EVA pipeline interface expert.",
    role: "Android Science Officer for analytics, medical support, auto-nav guidance, and high-risk manual overrides.",
    location: "Sulaco ops core — autonav interfaces; auxiliary medbay; cargo subsystems and diagnostics.",
  },
  {
    id: 4,
    name: "Carter J. Burke — Weyland-Yutani liaison focused on asset recovery, risk externalization, and legal mitigation across jurisdictions.",
    role: "Company Rep overseeing procurement pipelines, project sign-offs, and liability containment under confidential directives.",
    location: "Weyland-Yutani corporate — special projects floor; trade compliance & legal mitigation desk.",
  },
];

const customStyles = {
  headRow: { style: { height: 48 } },
  rows: { style: { height: 44 } },
  cells: { style: { paddingTop: 0, paddingBottom: 0 } },
};

export default function App() {
  return (
    <div style={{ padding: 16, fontFamily: "system-ui, sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Truncate v1 (One-line)</h1>
      <DataTable columns={columns} data={data} dense customStyles={customStyles} />
    </div>
  );
}


Contents of 06_text_wrapping_truncation/01_wrap_property/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 06_text_wrapping_truncation/01_wrap_property/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 06_text_wrapping_truncation/01_wrap_property/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 06_text_wrapping_truncation/01_wrap_property/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 06_text_wrapping_truncation/01_wrap_property/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 06_text_wrapping_truncation/01_wrap_property/src/App.jsx:

// App.jsx — Wrap v1 (built-in `wrap`)
// Let long text flow to multiple lines in selected columns.

import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "72px" },
  { name: "Name", selector: r => r.name, wrap: true },
  { name: "Role", selector: r => r.role, wrap: false },
  { name: "Location", selector: r => r.location, wrap: true },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley — USCSS Nostromo warrant officer noted for decisive, high-risk containment protocols and strict quarantine enforcement.",
    role: "Warrant Officer handling shipboard ops, cargo quarantine compliance, evidence preservation, and emergency decision-making per Special Orders.",
    location: "Hadley’s Hope, Acheron (LV-426) — atmospheric processor perimeter; temporary admin sector near main power relay.",
  },
  {
    id: 2,
    name: "Dwayne Hicks — Colonial Marine NCO; calm, methodical command presence; de facto squad lead during LV-426 incident.",
    role: "Perimeter defense, motion-tracker sweeps, evac logistics, tactical fallback plans, and breach management under fire.",
    location: "USS Sulaco — UD-4L Cheyenne dropship bay; forward armory staging for rapid redeploy.",
  },
  {
    id: 3,
    name: "Bishop — Hyperdyne Systems synthetic; precision operations, surgical dexterity, probabilistic navigation, EVA pipeline interface expert.",
    role: "Android Science Officer for analytics, medical support, auto-nav guidance, and high-risk manual overrides.",
    location: "Sulaco ops core — autonav interfaces; auxiliary medbay; cargo subsystems and diagnostics.",
  },
];

export default function App() {
  return (
    <div style={{ padding: 16, fontFamily: "system-ui" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Wrap v1</h1>
      <DataTable columns={columns} data={data} />
    </div>
  );
}


Contents of 01_simple/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 01_simple/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 01_simple/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 01_simple/README.md:

# 01 — Basic React Data Table Example

This project shows the **simplest possible usage** of the [React Data Table Component (RDT)](https://www.npmjs.com/package/react-data-table-component).

---

## 📖 What is RDT?

React Data Table Component is a popular React library that lets you build interactive and customizable data tables with **minimal boilerplate**.

Instead of manually writing `<table><tr><td>` markup, you declare:

- **Columns** → configuration objects with `name` (header) and `selector` (how to extract values from data rows).
- **Data** → an array of objects representing your rows.

RDT takes care of rendering the table structure.

---

## ⚙️ What this project does

- Installs `react-data-table-component`.
- Defines two columns: **Title** and **Year**.
- Supplies three rows of sample movie data.
- Renders a `<DataTable>` component with the columns + data.

That’s it — the bare minimum table.

---

## 🏛 Historical Context

- In **early web apps**, tables were written with raw HTML `<table>`, `<tr>`, `<td>` markup. Styling and interaction (sorting, pagination) had to be coded manually or with jQuery plugins (like **DataTables.js**, created in 2008).
- With **React (2013+)**, developers wanted **declarative, component-based tables**. Several libraries emerged to replace jQuery DataTables in a React-friendly way.
- **React Data Table Component (RDT)** appeared around 2018, designed as a **lightweight, declarative alternative** to heavy table libraries. It quickly gained traction because:

  - It works with plain arrays of objects.
  - It has built-in support for sorting, pagination, selectable rows, expandable rows, and theming.
  - It doesn’t require CSS frameworks (but integrates easily if you want).

---

## 🚀 Running the project

```bash
npm install
npm install react-data-table-component
npm run dev
```

Open [http://localhost:5173](http://localhost:5173) to see the table.


Contents of 01_simple/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 01_simple/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 01_simple/src/App.jsx:

import DataTable from "react-data-table-component";

// -----------------------------
// Define the table structure
// -----------------------------
// "columns" tells RDT what columns exist in the table and
// how to map data fields into them.
const columns = [
  { name: "Title", selector: r => r.title },
  { name: "Year", selector: r => r.year },
];

// -----------------------------
// Provide some sample data
// -----------------------------
// This is static for now, but later projects will show
// how to load dynamic or server-side data.
const data = [
  { id: 1, title: "Conan the Barbarian", year: 1982 },
  { id: 2, title: "The Terminator", year: 1984 },
  { id: 3, title: "Predator", year: 1987 },
];

// -----------------------------
// App component renders the DataTable
// -----------------------------
// The <DataTable> component is provided by
// "react-data-table-component" (RDT).
export default function App() {
  return (
    <div>
      <h2>01 — Basic</h2>
      <DataTable columns={columns} data={data} />
    </div>
  );
}


Contents of 04_fixed_column_width/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 04_fixed_column_width/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 04_fixed_column_width/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 04_fixed_column_width/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 04_fixed_column_width/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 04_fixed_column_width/src/App.jsx:

// App.jsx — Fixed widths + borders (ultra-minimal)
// Trick used:
// Set every column to a fixed px width and force the table’s root width to 'max-content'
// so it hugs the sum of those widths; wrap it in an overflow-x:auto container.
// customStyles.table.style.width = 'max-content' so RDT doesn't distribute free spac

import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "72px" },
  { name: "Name", selector: r => r.name, width: "260px", wrap: true },
  { name: "Role", selector: r => r.role, width: "300px", wrap: true },
  { name: "Age", selector: r => r.age, width: "90px", right: true },
  { name: "Location", selector: r => r.location, width: "340px", wrap: true },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley — USCSS Nostromo warrant officer noted for decisive, high-risk containment protocols and strict quarantine enforcement.",
    role: "Warrant Officer handling shipboard ops, cargo quarantine compliance, evidence preservation, and emergency decision-making per Special Orders.",
    age: 32,
    location: "Hadley’s Hope, Acheron (LV-426) — atmospheric processor perimeter; temporary admin sector near main power relay.",
  },
  {
    id: 2,
    name: "Dwayne Hicks — Colonial Marine NCO; calm, methodical command presence; de facto squad lead during LV-426 incident.",
    role: "Corporal coordinating perimeter defense, motion-tracker sweeps, evac logistics, and tactical fallback plans under fire.",
    age: 28,
    location: "USS Sulaco — UD-4L Cheyenne dropship bay; forward armory staging for rapid redeploy.",
  },
  {
    id: 3,
    name: "Bishop — Hyperdyne Systems synthetic; precision operations, surgical dexterity, probabilistic navigation, EVA pipeline interface expert.",
    role: "Android Science Officer for analytics, medical support, auto-nav guidance, and high-risk manual overrides.",
    age: "—",
    location: "Sulaco ops core — autonav interfaces; auxiliary medbay; cargo subsystems and diagnostics.",
  },
  {
    id: 4,
    name: "Carter J. Burke — Weyland-Yutani liaison focused on asset recovery, risk externalization, and legal mitigation across jurisdictions.",
    role: "Company Rep overseeing procurement pipelines, project sign-offs, and liability containment under confidential directives.",
    age: 35,
    location: "Weyland-Yutani corporate — special projects floor; trade compliance & legal mitigation desk.",
  },
];

const customStyles = {
  table: {
    style: {
      border: "1px solid #e5e7eb",
      borderRadius: 10,
      overflow: "hidden",
      width: "max-content", // use sum of column widths; prevents stretch
    },
  },
  headRow: { style: { borderBottom: "1px solid #e5e7eb", background: "#f9fafb" } },
  rows: { style: { borderBottom: "1px solid #e5e7eb" } },
  headCells: { style: { borderRight: "1px solid #e5e7eb" } },
  cells: { style: { borderRight: "1px solid #e5e7eb" } },
};

export default function App() {
  return (
    <div>
      <style>{`
        .rdt_TableCol:last-child { border-right: none !important; }
        .rdt_TableCell:last-child { border-right: none !important; }
      `}</style>
      <DataTable columns={columns} data={data} customStyles={customStyles} dense />
    </div>
  );
}


Contents of 11_column_visibility/01_toggle_column_visibility/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 11_column_visibility/01_toggle_column_visibility/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 11_column_visibility/01_toggle_column_visibility/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 11_column_visibility/01_toggle_column_visibility/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 11_column_visibility/01_toggle_column_visibility/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 11_column_visibility/01_toggle_column_visibility/src/App.jsx:

// App.jsx — Column Visibility v1 (basic checkboxes → column.omit)
// Toggle visibility by flipping each column's `omit` prop.

import React from "react";
import DataTable from "react-data-table-component";

const BASE_COLS = [
  { id: "id", name: "ID", selector: r => r.id, width: "80px" },
  { id: "name", name: "Name", selector: r => r.name },
  { id: "role", name: "Role", selector: r => r.role },
  { id: "age", name: "Age", selector: r => r.age, right: true, width: "100px" },
];

const data = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer", age: 32 },
  { id: 2, name: "Dwayne Hicks", role: "Corporal", age: 28 },
  { id: 3, name: "Bishop", role: "Science Officer", age: 4 },
];

export default function App() {
  // track visible columns by id
  const [visible, setVisible] = React.useState(() => new Set(["id", "name", "role", "age"]));

  const toggle = id =>
    setVisible(prev => {
      const next = new Set(prev);
      if (next.has(id)) next.delete(id);
      else next.add(id);
      return next;
    });

  // map base columns → set omit based on visibility set
  const columns = React.useMemo(() => BASE_COLS.map(c => ({ ...c, omit: !visible.has(c.id) })), [visible]);

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Column Visibility v1</h1>

      <div style={{ display: "flex", gap: 12, marginBottom: 10 }}>
        {BASE_COLS.map(c => (
          <label key={c.id} style={{ display: "inline-flex", alignItems: "center", gap: 6 }}>
            <input type="checkbox" checked={visible.has(c.id)} onChange={() => toggle(c.id)} />
            {c.name}
          </label>
        ))}
      </div>

      <DataTable columns={columns} data={data} />
    </div>
  );
}


Contents of 11_column_visibility/02_preset_column_visibility/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 11_column_visibility/02_preset_column_visibility/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 11_column_visibility/02_preset_column_visibility/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 11_column_visibility/02_preset_column_visibility/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 11_column_visibility/02_preset_column_visibility/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 11_column_visibility/02_preset_column_visibility/src/App.jsx:

// App.jsx — Column Visibility v3 (presets: Minimal vs Detailed)
// Quick presets that swap which columns are visible.

import React from "react";
import DataTable from "react-data-table-component";

const BASE_COLS = [
  { id: "id", name: "ID", selector: r => r.id, width: "80px" },
  { id: "name", name: "Name", selector: r => r.name },
  { id: "role", name: "Role", selector: r => r.role },
  { id: "age", name: "Age", selector: r => r.age, right: true, width: "100px" },
  { id: "loc", name: "Location", selector: r => r.location },
  { id: "note", name: "Note", selector: r => r.note, wrap: true },
];

const data = [
  { id: 1, name: "Ripley", role: "Warrant Officer", age: 32, location: "LV-426", note: "Quarantine stickler" },
  { id: 2, name: "Hicks", role: "Corporal", age: 28, location: "Sulaco", note: "Calm under pressure" },
  { id: 3, name: "Bishop", role: "Science Officer", age: 4, location: "Sulaco", note: "Excellent EVA ops" },
];

export default function App() {
  const [visible, setVisible] = React.useState(new Set(["id", "name", "role"]));

  const showMinimal = () => setVisible(new Set(["id", "name", "role"]));
  const showDetailed = () => setVisible(new Set(["id", "name", "role", "age", "loc", "note"]));

  const columns = React.useMemo(() => BASE_COLS.map(c => ({ ...c, omit: !visible.has(c.id) })), [visible]);

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Column Visibility v3 (Presets)</h1>
      <div style={{ display: "flex", gap: 8, marginBottom: 10 }}>
        <button onClick={showMinimal}>Minimal</button>
        <button onClick={showDetailed}>Detailed</button>
      </div>
      <DataTable columns={columns} data={data} />
    </div>
  );
}


Contents of 14_filters/01_per_column_filters/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 14_filters/01_per_column_filters/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 14_filters/01_per_column_filters/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 14_filters/01_per_column_filters/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 14_filters/01_per_column_filters/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 14_filters/01_per_column_filters/src/App.jsx:

// App.jsx — Per-Column Filters v1 (simple inputs in a subHeader)
// One input per column (Name, Role, Location). Case-insensitive "includes" matching.

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name, grow: 2 },
  { name: "Role", selector: r => r.role, grow: 2, wrap: true },
  { name: "Location", selector: r => r.location, grow: 1, wrap: true },
];

const ALL = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer", location: "LV-426" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal",        location: "USS Sulaco" },
  { id: 3, name: "Bishop",       role: "Science Officer", location: "USS Sulaco" },
  { id: 4, name: "Vasquez",      role: "Smartgunner",     location: "LV-426" },
];

export default function App() {
  const [nameQ, setNameQ] = React.useState("");
  const [roleQ, setRoleQ] = React.useState("");
  const [locQ, setLocQ] = React.useState("");

  const filtered = React.useMemo(() => {
    const nm = nameQ.toLowerCase();
    const rl = roleQ.toLowerCase();
    const lc = locQ.toLowerCase();
    return ALL.filter(r =>
      r.name.toLowerCase().includes(nm) &&
      r.role.toLowerCase().includes(rl) &&
      r.location.toLowerCase().includes(lc)
    );
  }, [nameQ, roleQ, locQ]);

  const Filters = (
    <div style={{ display: "flex", gap: 8, flexWrap: "wrap" }}>
      <input placeholder="Name…"     value={nameQ} onChange={e => setNameQ(e.target.value)} style={ibox} />
      <input placeholder="Role…"     value={roleQ} onChange={e => setRoleQ(e.target.value)} style={ibox} />
      <input placeholder="Location…" value={locQ}  onChange={e => setLocQ(e.target.value)}  style={ibox} />
      <button onClick={() => { setNameQ(""); setRoleQ(""); setLocQ(""); }}>Clear</button>
    </div>
  );

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 10 }}>RDT — Per-Column Filters v1</h1>
      <DataTable columns={columns} data={filtered} subHeader subHeaderComponent={Filters} />
    </div>
  );
}

const ibox = { width: 180, padding: "6px 10px", borderRadius: 8, border: "1px solid #e5e7eb" };


Contents of 14_filters/02_per_column_filters_and_dropdown/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 14_filters/02_per_column_filters_and_dropdown/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 14_filters/02_per_column_filters_and_dropdown/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 14_filters/02_per_column_filters_and_dropdown/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 14_filters/02_per_column_filters_and_dropdown/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 14_filters/02_per_column_filters_and_dropdown/src/App.jsx:

// App.jsx — Per-Column Filters in HEADER v1 (text inputs inside headers)
// No subHeader, no external bars — each column header contains its own input.

import React from "react";
import DataTable from "react-data-table-component";

const ALL = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer", location: "LV-426" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal", location: "USS Sulaco" },
  { id: 3, name: "Bishop", role: "Science Officer", location: "USS Sulaco" },
  { id: 4, name: "Vasquez", role: "Smartgunner", location: "LV-426" },
];

export default function App() {
  const [filters, setFilters] = React.useState({ name: "", role: "", location: "" });
  const set = (k, v) => setFilters(f => ({ ...f, [k]: v }));

  const filtered = React.useMemo(() => {
    const nm = filters.name.toLowerCase();
    const rl = filters.role.toLowerCase();
    const lc = filters.location.toLowerCase();
    return ALL.filter(r => r.name.toLowerCase().includes(nm) && r.role.toLowerCase().includes(rl) && r.location.toLowerCase().includes(lc));
  }, [filters]);

  const I = props => (
    <input {...props} style={{ width: "100%", boxSizing: "border-box", padding: 6, fontSize: 12, border: "1px solid #e5e7eb", borderRadius: 6 }} />
  );

  const columns = [
    { name: "ID", selector: r => r.id, width: "80px", right: true },
    {
      name: (
        <div style={{ display: "grid", gap: 6 }}>
          <span>Name</span>
          <I placeholder="Filter…" value={filters.name} onChange={e => set("name", e.target.value)} />
        </div>
      ),
      selector: r => r.name,
      grow: 2,
    },
    {
      name: (
        <div style={{ display: "grid", gap: 6 }}>
          <span>Role</span>
          <I placeholder="Filter…" value={filters.role} onChange={e => set("role", e.target.value)} />
        </div>
      ),
      selector: r => r.role,
      grow: 2,
      wrap: true,
    },
    {
      name: (
        <div style={{ display: "grid", gap: 6 }}>
          <span>Location</span>
          <I placeholder="Filter…" value={filters.location} onChange={e => set("location", e.target.value)} />
        </div>
      ),
      selector: r => r.location,
      grow: 1,
      wrap: true,
    },
  ];

  return (
    <div style={{ padding: 16, fontFamily: "system-ui, sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 10 }}>RDT — Header Filters v1 (Inputs in header)</h1>
      <DataTable columns={columns} data={filtered} />
    </div>
  );
}


Contents of 15_no_pagination_displaying_rows/03_load_more_infinite_scroll/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 15_no_pagination_displaying_rows/03_load_more_infinite_scroll/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 15_no_pagination_displaying_rows/03_load_more_infinite_scroll/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 15_no_pagination_displaying_rows/03_load_more_infinite_scroll/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 15_no_pagination_displaying_rows/03_load_more_infinite_scroll/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 15_no_pagination_displaying_rows/03_load_more_infinite_scroll/src/App.jsx:

// App.jsx — Infinite Scroll (ultra-simple)

import React from "react";
import DataTable from "react-data-table-component";

const ALL = Array.from({ length: 1000 }, (_, i) => ({
  id: i + 1,
  name: `Person ${i + 1}`,
  role: ["Analyst", "Technician", "Officer", "Pilot"][i % 4],
}));

const columns = [
  { name: "ID", selector: r => r.id, width: "80px", right: true },
  { name: "Name", selector: r => r.name, grow: 2 },
  { name: "Role", selector: r => r.role, grow: 1 },
];

export default function App() {
  const STEP = 10; // rows per load
  const DELAY_MS = 3000; // slower append for smoother feel

  const [count, setCount] = React.useState(35); // start very small
  const [loading, setLoading] = React.useState(false);

  const sentinelRef = React.useRef(null);

  React.useEffect(() => {
    const el = sentinelRef.current;
    if (!el) return;

    const io = new IntersectionObserver(
      entries => {
        const hitBottom = entries[0].isIntersecting;
        const moreLeft = count < ALL.length;
        if (hitBottom && moreLeft && !loading) {
          setLoading(true);
          setTimeout(() => {
            setCount(c => Math.min(c + STEP, ALL.length));
            setLoading(false);
          }, DELAY_MS);
        }
      },
      { root: null, rootMargin: "300px 0px", threshold: 0 }
    );

    io.observe(el);
    return () => io.disconnect();
  }, [count, loading]);

  const rows = ALL.slice(0, count);
  const done = count >= ALL.length;

  return (
    <div style={{ padding: 16, fontFamily: "system-ui, sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 10 }}>RDT — Simple Infinite Scroll</h1>
      {/* Slight dim while "loading" for a softer feel */}
      <div style={{ opacity: loading ? 0.85 : 1, transition: "opacity 200ms" }}>
        <DataTable columns={columns} data={rows} dense />
      </div>
      <div style={{ textAlign: "center", color: "#64748b", fontSize: 13, padding: 10 }}>
        {done ? "End of list" : loading ? "Loading…" : "Scroll to load more…"}
      </div>
      {!done && <div ref={sentinelRef} style={{ height: 1 }} />} {/* sentinel */}
    </div>
  );
}


Contents of 15_no_pagination_displaying_rows/01_fading_rows/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 15_no_pagination_displaying_rows/01_fading_rows/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 15_no_pagination_displaying_rows/01_fading_rows/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 15_no_pagination_displaying_rows/01_fading_rows/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 15_no_pagination_displaying_rows/01_fading_rows/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 15_no_pagination_displaying_rows/01_fading_rows/src/App.jsx:

// App.jsx — staggered fade-in on mount
// Each row fades & slides up with a slight delay using nth-child().

import React from "react";
import DataTable from "react-data-table-component";

const columns = [
  { name: "ID", selector: r => r.id, width: "80px" },
  { name: "Name", selector: r => r.name, grow: 2 },
  { name: "Role", selector: r => r.role, grow: 2, wrap: true },
];

const data = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer (Android)" },
  { id: 4, name: "Vasquez", role: "Smartgunner" },
  { id: 5, name: "Hudson", role: "Private" },
];

export default function App() {
  return (
    <div className="anim1" style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <style>{`
        @keyframes fadeUp { from { opacity: 0; transform: translateY(6px); } to { opacity: 1; transform: translateY(0); } }
        .anim1 .rdt_TableRow { opacity: 0; animation: fadeUp .35s ease forwards; }
        .anim1 .rdt_TableRow:nth-child(1) { animation-delay: .02s; }
        .anim1 .rdt_TableRow:nth-child(2) { animation-delay: .06s; }
        .anim1 .rdt_TableRow:nth-child(3) { animation-delay: .10s; }
        .anim1 .rdt_TableRow:nth-child(4) { animation-delay: .14s; }
        .anim1 .rdt_TableRow:nth-child(5) { animation-delay: .18s; }
      `}</style>
      <h1 style={{ margin: 0, marginBottom: 12 }}>RDT — Animations v1 (Staggered Fade-in)</h1>
      <DataTable columns={columns} data={data} />
    </div>
  );
}


Contents of 15_no_pagination_displaying_rows/02_load_more_button/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 15_no_pagination_displaying_rows/02_load_more_button/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 15_no_pagination_displaying_rows/02_load_more_button/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 15_no_pagination_displaying_rows/02_load_more_button/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 15_no_pagination_displaying_rows/02_load_more_button/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 15_no_pagination_displaying_rows/02_load_more_button/src/App.jsx:

// App.jsx — Load More (minimal)

import React from "react";
import DataTable from "react-data-table-component";

const ALL = Array.from({ length: 1000 }, (_, i) => ({
  id: i + 1,
  name: `Person ${i + 1}`,
  role: ["Analyst", "Technician", "Officer", "Pilot"][i % 4],
}));

const columns = [
  { name: "ID", selector: r => r.id, width: "80px", right: true },
  { name: "Name", selector: r => r.name, grow: 2 },
  { name: "Role", selector: r => r.role, grow: 1 },
];

export default function App() {
  const STEP = 10;
  const [count, setCount] = React.useState(20);

  const rows = ALL.slice(0, count);
  const done = count >= ALL.length;

  return (
    <div>
      <DataTable columns={columns} data={rows} dense />
      {!done && <button onClick={() => setCount(c => Math.min(c + STEP, ALL.length))}>Load more</button>}
      {done && <div>End of list</div>}
    </div>
  );
}


Contents of 16_cell_editing/03_edit_button_inline_edit/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 16_cell_editing/03_edit_button_inline_edit/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 16_cell_editing/03_edit_button_inline_edit/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 16_cell_editing/03_edit_button_inline_edit/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 16_cell_editing/03_edit_button_inline_edit/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 16_cell_editing/03_edit_button_inline_edit/src/App.jsx:

// App.jsx — Cell Editing v3 (row edit mode: Save/Cancel)
// Click Edit to turn the whole row into inputs; Save/Cancel affects that row.

import React from "react";
import DataTable from "react-data-table-component";

const seed = [
  { id: 1, name: "Ripley", role: "Warrant Officer" },
  { id: 2, name: "Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer" },
];

export default function App() {
  const [rows, setRows] = React.useState(seed);
  const [editId, setEditId] = React.useState(null);
  const [draft, setDraft] = React.useState({ name: "", role: "" });

  const start = r => { setEditId(r.id); setDraft({ name: r.name, role: r.role }); };
  const save  = () => { setRows(rs => rs.map(r => r.id === editId ? { ...r, ...draft } : r)); setEditId(null); };
  const cancel= () => setEditId(null);

  const NameCell = r => editId === r.id
    ? <input autoFocus value={draft.name} onChange={e => setDraft(d => ({ ...d, name: e.target.value }))} style={{ width:"100%", padding:6 }} />
    : <span>{r.name}</span>;

  const RoleCell = r => editId === r.id
    ? <input value={draft.role} onChange={e => setDraft(d => ({ ...d, role: e.target.value }))} style={{ width:"100%", padding:6 }} />
    : <span>{r.role}</span>;

  const columns = [
    { name:"ID", selector:r=>r.id, width:"70px", right:true },
    { name:"Name", cell: NameCell, grow:2 },
    { name:"Role", cell: RoleCell, grow:2, wrap:true },
    { name:"Actions", width:"160px", cell: r => editId === r.id
        ? (<><button onClick={save}>Save</button> <button onClick={cancel}>Cancel</button></>)
        : (<button onClick={() => start(r)}>Edit</button>)
      }
  ];

  return (
    <div style={{ padding:16, fontFamily:"system-ui,sans-serif" }}>
      <h2 style={{ margin:0, marginBottom:10 }}>RDT — Cell Editing v3</h2>
      <DataTable columns={columns} data={rows} dense />
    </div>
  );
}


Contents of 16_cell_editing/04_edit_button_modal/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 16_cell_editing/04_edit_button_modal/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 16_cell_editing/04_edit_button_modal/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 16_cell_editing/04_edit_button_modal/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 16_cell_editing/04_edit_button_modal/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 16_cell_editing/04_edit_button_modal/src/App.jsx:

// App.jsx — Cell Editing (Edit button opens a modal with details)
// Click "Edit" → a lightweight modal appears to edit Name, Role, and Location.
// Save applies changes to that row; Cancel closes without saving.

import React from "react";
import DataTable from "react-data-table-component";

const SEED = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer", location: "LV-426" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal",        location: "USS Sulaco" },
  { id: 3, name: "Bishop",       role: "Science Officer", location: "USS Sulaco" },
];

function Modal({ open, title, children, onClose }) {
  if (!open) return null;
  return (
    <div
      onClick={onClose}
      style={{
        position: "fixed", inset: 0, background: "rgba(0,0,0,.35)",
        display: "flex", alignItems: "center", justifyContent: "center", padding: 16, zIndex: 50
      }}
    >
      <div
        onClick={e => e.stopPropagation()}
        style={{
          width: "min(520px, 92vw)", background: "#fff", borderRadius: 12,
          padding: 16, boxShadow: "0 12px 30px rgba(0,0,0,.2)"
        }}
      >
        <h3 style={{ margin: 0, marginBottom: 12 }}>{title}</h3>
        {children}
      </div>
    </div>
  );
}

export default function App() {
  const [rows, setRows] = React.useState(SEED);
  const [open, setOpen] = React.useState(false);
  const [editId, setEditId] = React.useState(null);
  const [draft, setDraft] = React.useState({ name: "", role: "", location: "" });

  // Open modal with current row as draft
  const startEdit = (row) => {
    setEditId(row.id);
    setDraft({ name: row.name || "", role: row.role || "", location: row.location || "" });
    setOpen(true);
  };

  const save = () => {
    setRows(rs => rs.map(r => (r.id === editId ? { ...r, ...draft } : r)));
    setOpen(false);
    setEditId(null);
  };

  const columns = [
    { name: "ID", selector: r => r.id, width: "70px", right: true },
    { name: "Name", selector: r => r.name, grow: 2 },
    { name: "Role", selector: r => r.role, grow: 2, wrap: true },
    { name: "Location", selector: r => r.location, grow: 1, wrap: true },
    {
      name: "Actions",
      width: "120px",
      cell: row => <button onClick={() => startEdit(row)}>Edit</button>,
      ignoreRowClick: true,
      button: true,
    },
  ];

  // Close on Escape inside modal
  React.useEffect(() => {
    if (!open) return;
    const onKey = (e) => { if (e.key === "Escape") setOpen(false); if (e.key === "Enter") save(); };
    window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, [open, draft]);

  return (
    <div style={{ padding: 16, fontFamily: "system-ui, sans-serif" }}>
      <h1 style={{ margin: 0, marginBottom: 10 }}>RDT — Edit Button → Modal</h1>
      <DataTable columns={columns} data={rows} dense />

      <Modal open={open} title={`Edit Row #${editId ?? ""}`} onClose={() => setOpen(false)}>
        <div style={{ display: "grid", gap: 10 }}>
          <label style={{ display: "grid", gap: 6 }}>
            <span style={{ fontSize: 12, color: "#475569" }}>Name</span>
            <input
              value={draft.name}
              onChange={e => setDraft(d => ({ ...d, name: e.target.value }))}
              style={{ padding: 8, border: "1px solid #e5e7eb", borderRadius: 8 }}
              autoFocus
            />
          </label>

          <label style={{ display: "grid", gap: 6 }}>
            <span style={{ fontSize: 12, color: "#475569" }}>Role</span>
            <input
              value={draft.role}
              onChange={e => setDraft(d => ({ ...d, role: e.target.value }))}
              style={{ padding: 8, border: "1px solid #e5e7eb", borderRadius: 8 }}
            />
          </label>

          <label style={{ display: "grid", gap: 6 }}>
            <span style={{ fontSize: 12, color: "#475569" }}>Location</span>
            <input
              value={draft.location}
              onChange={e => setDraft(d => ({ ...d, location: e.target.value }))}
              style={{ padding: 8, border: "1px solid #e5e7eb", borderRadius: 8 }}
            />
          </label>
        </div>

        <div style={{ display: "flex", gap: 8, justifyContent: "flex-end", marginTop: 14 }}>
          <button onClick={() => setOpen(false)}>Cancel</button>
          <button onClick={save} disabled={!draft.name.trim() || !draft.role.trim()}>
            Save
          </button>
        </div>
      </Modal>
    </div>
  );
}


Contents of 16_cell_editing/02_two_cell_inline_edit/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 16_cell_editing/02_two_cell_inline_edit/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 16_cell_editing/02_two_cell_inline_edit/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 16_cell_editing/02_two_cell_inline_edit/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 16_cell_editing/02_two_cell_inline_edit/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 16_cell_editing/02_two_cell_inline_edit/src/App.jsx:

// App.jsx — Cell Editing v2 (per-cell editing, Name & Role)
// Each cell toggles to an <input> on double click; independent per cell.

import React from "react";
import DataTable from "react-data-table-component";

const seed = [
  { id: 1, name: "Ripley", role: "Warrant Officer" },
  { id: 2, name: "Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer" },
];

export default function App() {
  const [rows, setRows] = React.useState(seed);
  const [editKey, setEditKey] = React.useState(null); // `${id}:${field}`
  const [draft, setDraft] = React.useState("");

  function Cell({ row, field }) {
    const key = `${row.id}:${field}`;
    const editing = editKey === key;
    if (!editing) {
      return (
        <span
          onDoubleClick={() => {
            setEditKey(key);
            setDraft(row[field] ?? "");
          }}
        >
          {row[field]}
        </span>
      );
    }
    return (
      <input
        autoFocus
        value={draft}
        onChange={e => setDraft(e.target.value)}
        onBlur={() => {
          setRows(rs => rs.map(r => (r.id === row.id ? { ...r, [field]: draft.trim() } : r)));
          setEditKey(null);
        }}
        onKeyDown={e => {
          if (e.key === "Enter") e.currentTarget.blur();
          if (e.key === "Escape") setEditKey(null);
        }}
        style={{ width: "100%", padding: 6 }}
      />
    );
  }

  const columns = [
    { name: "ID", selector: r => r.id, width: "68px", right: true },
    { name: "Name", cell: r => <Cell row={r} field="name" />, grow: 2 },
    { name: "Role", cell: r => <Cell row={r} field="role" />, grow: 2, wrap: true },
  ];

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h2 style={{ margin: 0, marginBottom: 10 }}>RDT — Cell Editing v2</h2>
      <DataTable columns={columns} data={rows} dense />
    </div>
  );
}


Contents of 16_cell_editing/01_one_cell_inline_edit/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 16_cell_editing/01_one_cell_inline_edit/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 16_cell_editing/01_one_cell_inline_edit/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 16_cell_editing/01_one_cell_inline_edit/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 16_cell_editing/01_one_cell_inline_edit/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 16_cell_editing/01_one_cell_inline_edit/src/App.jsx:

// App.jsx — Cell Editing v1 (single column, inline)
// Edit only the "Role" cell. Save on Enter/blur, cancel on Escape.

import React from "react";
import DataTable from "react-data-table-component";

const initial = [
  { id: 1, name: "Ellen Ripley", role: "Warrant Officer" },
  { id: 2, name: "Dwayne Hicks", role: "Corporal" },
  { id: 3, name: "Bishop", role: "Science Officer" },
];

export default function App() {
  const [rows, setRows] = React.useState(initial);
  const [editingId, setEditingId] = React.useState(null);
  const [draft, setDraft] = React.useState("");

  const RoleCell = row =>
    editingId === row.id ? (
      <input
        autoFocus
        value={draft}
        onChange={e => setDraft(e.target.value)}
        onBlur={() => {
          setRows(rs => rs.map(r => (r.id === row.id ? { ...r, role: draft.trim() } : r)));
          setEditingId(null);
        }}
        onKeyDown={e => {
          if (e.key === "Enter") e.currentTarget.blur();
          if (e.key === "Escape") setEditingId(null);
        }}
        style={{ width: "100%", padding: 6 }}
      />
    ) : (
      <span
        onDoubleClick={() => {
          setEditingId(row.id);
          setDraft(row.role);
        }}
      >
        {row.role}
      </span>
    );

  const columns = [
    { name: "ID", selector: r => r.id, width: "72px", right: true },
    { name: "Name", selector: r => r.name, grow: 2 },
    { name: "Role (dbl-click to edit)", cell: RoleCell, grow: 2 },
  ];

  return (
    <div style={{ padding: 16, fontFamily: "system-ui,sans-serif" }}>
      <h2 style={{ margin: 0, marginBottom: 10 }}>RDT — Cell Editing v1</h2>
      <DataTable columns={columns} data={rows} dense />
    </div>
  );
}


Contents of 05_fixed_row_height/01_one_line_ellipsis/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 05_fixed_row_height/01_one_line_ellipsis/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 05_fixed_row_height/01_one_line_ellipsis/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 05_fixed_row_height/01_one_line_ellipsis/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 05_fixed_row_height/01_one_line_ellipsis/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 05_fixed_row_height/01_one_line_ellipsis/src/App.jsx:

// App.jsx — Fixed Row Height v1 (one-line ellipsis)
// Fixed row height with clipped overflow. Each cell renders a single line with "…".
// Note: we use `height` (not minHeight) to keep all rows exactly the same size.

import DataTable from "react-data-table-component";

const OneLine = ({ children, max }) => (
  <div style={{ whiteSpace: "nowrap", overflow: "hidden", textOverflow: "ellipsis", maxWidth: max }}>{children}</div>
);

const columns = [
  { name: "ID", selector: r => r.id, width: "72px", cell: r => <OneLine max={60}>{r.id}</OneLine> },
  { name: "Name", width: "260px", cell: r => <OneLine max={240}>{r.name}</OneLine> },
  { name: "Role", width: "280px", cell: r => <OneLine max={260}>{r.role}</OneLine> },
  { name: "Age", width: "90px", right: true, cell: r => <OneLine max={60}>{r.age}</OneLine> },
  { name: "Location", width: "320px", cell: r => <OneLine max={300}>{r.location}</OneLine> },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley — USCSS Nostromo warrant officer noted for decisive, high-risk containment protocols and strict quarantine enforcement.",
    role: "Warrant Officer handling shipboard ops, cargo quarantine compliance, evidence preservation, and emergency decision-making per Special Orders.",
    age: 32,
    location: "Hadley’s Hope, Acheron (LV-426) — atmospheric processor perimeter; temporary admin sector near main power relay.",
  },
  {
    id: 2,
    name: "Dwayne Hicks — Colonial Marine NCO; calm, methodical command presence; de facto squad lead during LV-426 incident.",
    role: "Corporal coordinating perimeter defense, motion-tracker sweeps, evac logistics, and tactical fallback plans under fire.",
    age: 28,
    location: "USS Sulaco — UD-4L Cheyenne dropship bay; forward armory staging for rapid redeploy.",
  },
  {
    id: 3,
    name: "Bishop — Hyperdyne Systems synthetic; precision operations, surgical dexterity, probabilistic navigation, EVA pipeline interface expert.",
    role: "Android Science Officer for analytics, medical support, auto-nav guidance, and high-risk manual overrides.",
    age: "—",
    location: "Sulaco ops core — autonav interfaces; auxiliary medbay; cargo subsystems and diagnostics.",
  },
  {
    id: 4,
    name: "Carter J. Burke — Weyland-Yutani liaison focused on asset recovery, risk externalization, and legal mitigation across jurisdictions.",
    role: "Company Rep overseeing procurement pipelines, project sign-offs, and liability containment under confidential directives.",
    age: 35,
    location: "Weyland-Yutani corporate — special projects floor; trade compliance & legal mitigation desk.",
  },
];

const customStyles = {
  table: { style: { width: "max-content" } }, // prevent stretch (optional here, keeps widths honest)
  headRow: { style: { height: "48px" } }, // fixed header height
  rows: { style: { height: "48px" } }, // <-- fixed row height
  cells: { style: { paddingTop: 0, paddingBottom: 0 } }, // remove vertical padding so height is strict
};

export default function App() {
  return (
    <div>
      <h1>RDT — Fixed Row Height v1 (One-line Ellipsis)</h1>
      <DataTable columns={columns} data={data} customStyles={customStyles} dense />
    </div>
  );
}


Contents of 05_fixed_row_height/04_two_line_clamp_fixed/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 05_fixed_row_height/04_two_line_clamp_fixed/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 05_fixed_row_height/04_two_line_clamp_fixed/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 05_fixed_row_height/04_two_line_clamp_fixed/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 05_fixed_row_height/04_two_line_clamp_fixed/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 05_fixed_row_height/04_two_line_clamp_fixed/src/App.jsx:

// App.jsx — Fixed Row Height v3 (CSS Override) — Two-line Clamp
// Strict row heights enforced via CSS !important, plus 2-line clamp inside cells.
// We also strip vertical padding so the height stays exact.

import React from "react";
import DataTable from "react-data-table-component";

// 2-line clamp wrapper
const TwoLine = ({ children }) => <div className="clamp2">{children}</div>;

const columns = [
  { name: "ID", width: "72px", cell: r => <TwoLine>{r.id}</TwoLine> },
  { name: "Name", width: "260px", cell: r => <TwoLine>{r.name}</TwoLine> },
  { name: "Role", width: "300px", cell: r => <TwoLine>{r.role}</TwoLine> },
  { name: "Age", width: "90px", right: true, cell: r => <TwoLine>{r.age}</TwoLine> },
  { name: "Location", width: "340px", cell: r => <TwoLine>{r.location}</TwoLine> },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley — USCSS Nostromo warrant officer noted for decisive, high-risk containment protocols and strict quarantine enforcement.",
    role: "Warrant Officer handling shipboard ops, cargo quarantine compliance, evidence preservation, and emergency decision-making per Special Orders.",
    age: 32,
    location: "Hadley’s Hope, Acheron (LV-426) — atmospheric processor perimeter; temporary admin sector near main power relay.",
  },
  {
    id: 2,
    name: "Dwayne Hicks — Colonial Marine NCO; calm, methodical command presence; de facto squad lead during LV-426 incident.",
    role: "Corporal coordinating perimeter defense, motion-tracker sweeps, evac logistics, and tactical fallback plans under fire.",
    age: 28,
    location: "USS Sulaco — UD-4L Cheyenne dropship bay; forward armory staging for rapid redeploy.",
  },
  {
    id: 3,
    name: "Bishop — Hyperdyne Systems synthetic; precision operations, surgical dexterity, probabilistic navigation, EVA pipeline interface expert.",
    role: "Android Science Officer for analytics, medical support, auto-nav guidance, and high-risk manual overrides.",
    age: "—",
    location: "Sulaco ops core — autonav interfaces; auxiliary medbay; cargo subsystems and diagnostics.",
  },
  {
    id: 4,
    name: "Carter J. Burke — Weyland-Yutani liaison focused on asset recovery, risk externalization, and legal mitigation across jurisdictions.",
    role: "Company Rep overseeing procurement pipelines, project sign-offs, and liability containment under confidential directives.",
    age: 35,
    location: "Weyland-Yutani corporate — special projects floor; trade compliance & legal mitigation desk.",
  },
];

export default function App() {
  return (
    <div className="fx3">
      <style>{`
        /* Strict heights for header/body rows */
        .fx3 .rdt_TableHeadRow { height: 50px !important; }
        .fx3 .rdt_TableRow     { height: 64px !important; }

        /* Remove vertical padding so height is exact */
        .fx3 .rdt_TableCell, .fx3 .rdt_TableCol {
          padding-top: 0 !important;
          padding-bottom: 0 !important;
        }

        /* Two-line clamp inside cells */
        .fx3 .clamp2 {
          display: -webkit-box;
          -webkit-line-clamp: 2;
          -webkit-box-orient: vertical;
          overflow: hidden;
        }
      `}</style>

      <h1>RDT — Fixed Row Height v3 (CSS + 2-line Clamp)</h1>
      <DataTable columns={columns} data={data} dense />
    </div>
  );
}


Contents of 05_fixed_row_height/02_two_line_clamp/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 05_fixed_row_height/02_two_line_clamp/src/App.jsx:

// App.jsx — Fixed Row Height v2 (two-line clamp)
// Rows have a strict height. Inside each cell we clamp content to 2 lines (CSS line-clamp).
// This preserves uniform height while showing a bit more text than a single line.

import DataTable from "react-data-table-component";

const TwoLine = ({ children }) => <div className="clamp2">{children}</div>;

const columns = [
  { name: "ID", width: "72px", cell: r => <TwoLine>{r.id}</TwoLine> },
  { name: "Name", width: "260px", cell: r => <TwoLine>{r.name}</TwoLine> },
  { name: "Role", width: "280px", cell: r => <TwoLine>{r.role}</TwoLine> },
  { name: "Age", width: "90px", right: true, cell: r => <TwoLine>{r.age}</TwoLine> },
  { name: "Location", width: "320px", cell: r => <TwoLine>{r.location}</TwoLine> },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley — USCSS Nostromo warrant officer noted for decisive, high-risk containment protocols and strict quarantine enforcement.",
    role: "Warrant Officer handling shipboard ops, cargo quarantine compliance, evidence preservation, and emergency decision-making per Special Orders.",
    age: 32,
    location: "Hadley’s Hope, Acheron (LV-426) — atmospheric processor perimeter; temporary admin sector near main power relay.",
  },
  {
    id: 2,
    name: "Dwayne Hicks — Colonial Marine NCO; calm, methodical command presence; de facto squad lead during LV-426 incident.",
    role: "Corporal coordinating perimeter defense, motion-tracker sweeps, evac logistics, and tactical fallback plans under fire.",
    age: 28,
    location: "USS Sulaco — UD-4L Cheyenne dropship bay; forward armory staging for rapid redeploy.",
  },
  {
    id: 3,
    name: "Bishop — Hyperdyne Systems synthetic; precision operations, surgical dexterity, probabilistic navigation, EVA pipeline interface expert.",
    role: "Android Science Officer for analytics, medical support, auto-nav guidance, and high-risk manual overrides.",
    age: "—",
    location: "Sulaco ops core — autonav interfaces; auxiliary medbay; cargo subsystems and diagnostics.",
  },
  {
    id: 4,
    name: "Carter J. Burke — Weyland-Yutani liaison focused on asset recovery, risk externalization, and legal mitigation across jurisdictions.",
    role: "Company Rep overseeing procurement pipelines, project sign-offs, and liability containment under confidential directives.",
    age: 35,
    location: "Weyland-Yutani corporate — special projects floor; trade compliance & legal mitigation desk.",
  },
];

const customStyles = {
  table: { style: { width: "max-content" } },
  headRow: { style: { height: "50px" } },
  rows: { style: { height: "64px" } }, // exact height to fit ~2 lines + padding
  cells: { style: { paddingTop: 6, paddingBottom: 6 } },
};

export default function App() {
  return (
    <div className="fx2">
      <style>{`
        .fx2 .clamp2 {
          display: -webkit-box;
          -webkit-line-clamp: 2;
          -webkit-box-orient: vertical;
          overflow: hidden;
        }
      `}</style>
      <h1>RDT — Fixed Row Height v2 (Two-line Clamp)</h1>
      <DataTable columns={columns} data={data} customStyles={customStyles} />
    </div>
  );
}


Contents of 05_fixed_row_height/03_one_line_ellipsis_fixed/index.html:

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Empty React Project</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


Contents of 05_fixed_row_height/03_one_line_ellipsis_fixed/.eslintrc.cjs:

module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: '18.2' } },
  plugins: ['react-refresh'],
  rules: {
    'react/jsx-no-target-blank': 'off',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
}


Contents of 05_fixed_row_height/03_one_line_ellipsis_fixed/vite.config.js:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})


Contents of 05_fixed_row_height/03_one_line_ellipsis_fixed/package.json:

{
  "name": "create-vite-app-example",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --open",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-data-table-component": "^7.7.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "vite": "^5.2.0"
  }
}


Contents of 05_fixed_row_height/03_one_line_ellipsis_fixed/src/main.jsx:

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


Contents of 05_fixed_row_height/03_one_line_ellipsis_fixed/src/App.jsx:

// App.jsx — Fixed Row Height v3 (CSS override on RDT rows)
// Force a strict height with CSS (not only customStyles). Also clamp each cell to one line.
// Using !important ensures no internal styles can increase height.

import DataTable from "react-data-table-component";

const OneLine = ({ children }) => <div style={{ whiteSpace: "nowrap", overflow: "hidden", textOverflow: "ellipsis" }}>{children}</div>;

const columns = [
  { name: "ID", width: "72px", cell: r => <OneLine>{r.id}</OneLine> },
  { name: "Name", width: "260px", cell: r => <OneLine>{r.name}</OneLine> },
  { name: "Role", width: "280px", cell: r => <OneLine>{r.role}</OneLine> },
  { name: "Age", width: "90px", right: true, cell: r => <OneLine>{r.age}</OneLine> },
  { name: "Location", width: "320px", cell: r => <OneLine>{r.location}</OneLine> },
];

const data = [
  {
    id: 1,
    name: "Ellen Louise Ripley — USCSS Nostromo warrant officer noted for decisive, high-risk containment protocols and strict quarantine enforcement.",
    role: "Warrant Officer handling shipboard ops, cargo quarantine compliance, evidence preservation, and emergency decision-making per Special Orders.",
    age: 32,
    location: "Hadley’s Hope, Acheron (LV-426) — atmospheric processor perimeter; temporary admin sector near main power relay.",
  },
  {
    id: 2,
    name: "Dwayne Hicks — Colonial Marine NCO; calm, methodical command presence; de facto squad lead during LV-426 incident.",
    role: "Corporal coordinating perimeter defense, motion-tracker sweeps, evac logistics, and tactical fallback plans under fire.",
    age: 28,
    location: "USS Sulaco — UD-4L Cheyenne dropship bay; forward armory staging for rapid redeploy.",
  },
  {
    id: 3,
    name: "Bishop — Hyperdyne Systems synthetic; precision operations, surgical dexterity, probabilistic navigation, EVA pipeline interface expert.",
    role: "Android Science Officer for analytics, medical support, auto-nav guidance, and high-risk manual overrides.",
    age: "—",
    location: "Sulaco ops core — autonav interfaces; auxiliary medbay; cargo subsystems and diagnostics.",
  },
  {
    id: 4,
    name: "Carter J. Burke — Weyland-Yutani liaison focused on asset recovery, risk externalization, and legal mitigation across jurisdictions.",
    role: "Company Rep overseeing procurement pipelines, project sign-offs, and liability containment under confidential directives.",
    age: 35,
    location: "Weyland-Yutani corporate — special projects floor; trade compliance & legal mitigation desk.",
  },
];

export default function App() {
  return (
    <div className="fx3">
      <style>{`
        /* strict heights for header/body rows */
        .fx3 .rdt_TableHeadRow { height: 48px !important; }
        .fx3 .rdt_TableRow     { height: 48px !important; }
        /* remove vertical padding so height stays exact */
        .fx3 .rdt_TableCell, .fx3 .rdt_TableCol {
          padding-top: 0 !important;
          padding-bottom: 0 !important;
        }
      `}</style>
      <h1>RDT — Fixed Row Height v3 (CSS Override)</h1>
      <DataTable columns={columns} data={data} dense />
    </div>
  );
}


